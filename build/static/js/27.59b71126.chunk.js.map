{"version":3,"sources":["containers/appointments/index.js"],"names":["AppointmentView","lazy","AllAppointmentsView","WaitingRoomView","NewAppointmentView","AppointmentApp","props","session","useSelector","s","fallback","isLoading","path","match","render","id","params","location","search","searchParams","URLSearchParams","has","viewName","get"],"mappings":"qMAKMA,EAAkBC,gBAAK,kBAAM,uDAC7BC,EAAsBD,gBAAK,kBAAM,uDACjCE,EAAkBF,gBAAK,kBAAM,uDAC7BG,EAAqBH,gBAAK,kBAAM,iCAGvB,SAASI,EAAeC,GACnC,IAAMC,EAAUC,aAAY,SAAAC,GAAC,OAAIA,EAAEF,WAEnC,OACI,cAAC,WAAD,CAAUG,SAAU,cAAC,IAAD,CAAQC,WAAW,IAAvC,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,KAAI,UAAKN,EAAMO,MAAMD,KAAjB,QACJE,OAAQ,SAACR,GAAD,OACJ,cAACN,EAAD,2BACQM,GADR,IAEIS,GAAIT,EAAMO,MAAMG,OAAOD,GACvBR,QAASA,QAIrB,cAAC,IAAD,CACIK,KAAK,GACLE,OAAQ,SAACR,GACL,GAAIA,EAAMW,SAASC,OAAQ,CACvB,IAAIC,EAAe,IAAIC,gBAAgBd,EAAMW,SAASC,QAEtD,GAAIC,EAAaE,IAAI,QAAS,CAC1B,IAAMC,EAAWH,EAAaI,IAAI,QAElC,GAAiB,QAAbD,EAAoB,CAMpB,OAJIH,EAAaE,IAAI,cACLF,EAAaI,IAAI,aAI7B,cAACnB,EAAD,2BAAwBE,GAAxB,IAA+BC,QAASA,KAEzC,GAAiB,YAAbe,EACP,OACI,cAACnB,EAAD,2BAAqBG,GAArB,IAA4BC,QAASA,MAMrD,OACI,cAACL,EAAD,2BAAyBI,GAAzB,IAAgCC,QAASA","file":"static/js/27.59b71126.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Loader } from '../../components/loaders';\r\n\r\nconst AppointmentView = lazy(() => import(\"./views/appointment\"));\r\nconst AllAppointmentsView = lazy(() => import(\"./views/allAppointments\"));\r\nconst WaitingRoomView = lazy(() => import('./views/waitingRoom'));\r\nconst NewAppointmentView = lazy(() => import('./views/newAppointment'));\r\n\r\n\r\nexport default function AppointmentApp(props) {\r\n    const session = useSelector(s => s.session);\r\n\r\n    return (\r\n        <Suspense fallback={<Loader isLoading={true} />}>\r\n            <Switch>\r\n                <Route\r\n                    path={`${props.match.path}/:id`}\r\n                    render={(props) => (\r\n                        <AppointmentView\r\n                            {...props} \r\n                            id={props.match.params.id}\r\n                            session={session}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route\r\n                    path=\"\"\r\n                    render={(props) => {\r\n                        if (props.location.search) {\r\n                            let searchParams = new URLSearchParams(props.location.search);\r\n\r\n                            if (searchParams.has(\"view\")) {\r\n                                const viewName = searchParams.get(\"view\");\r\n\r\n                                if (viewName === \"new\") {\r\n                                    let physician = \"\";\r\n                                    if (searchParams.has(\"physician\")) {\r\n                                        physician = searchParams.get(\"physician\");\r\n                                    }\r\n\r\n                                    return (\r\n                                        <NewAppointmentView {...props} session={session} />\r\n                                    );\r\n                                } else if (viewName === \"waiting\") {\r\n                                    return (\r\n                                        <WaitingRoomView {...props} session={session} />\r\n                                    );\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        return (\r\n                            <AllAppointmentsView {...props} session={session} />\r\n                        );\r\n                    }}\r\n                />\r\n            </Switch>\r\n        </Suspense>\r\n    );\r\n}"],"sourceRoot":""}