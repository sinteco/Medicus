{"version":3,"sources":["containers/users/index.js"],"names":["UserView","lazy","SearchPatientsView","SearchPhysiciansView","UserApp","props","session","useSelector","s","fallback","isLoading","path","match","exact","render","isPhysician","key","params","username"],"mappings":"qMAKMA,EAAWC,gBAAK,kBAAM,uDACtBC,EAAqBD,gBAAK,kBAAM,uDAChCE,EAAuBF,gBAAK,kBAAM,uDAGzB,SAASG,EAAQC,GAC5B,IAAMC,EAAUC,aAAY,SAAAC,GAAC,OAAIA,EAAEF,WAEnC,OACI,cAAC,WAAD,CAAUG,SAAU,cAAC,IAAD,CAAQC,WAAW,IAAvC,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,KAAMN,EAAMO,MAAMD,KAClBE,OAAO,EACPC,OAAQ,SAACT,GACL,OAAIC,EAAQS,YAEJ,cAACb,EAAD,2BAAwBG,GAAxB,IAA+BC,QAASA,KAIxC,cAACH,EAAD,2BAA0BE,GAA1B,IAAiCC,QAASA,QAK1D,cAAC,IAAD,CACIK,KAAI,UAAKN,EAAMO,MAAMD,KAAjB,cACJG,OAAQ,SAACT,GAAD,OACJ,wBAACL,EAAD,2BACQK,GADR,IAEIW,IAAKX,EAAMO,MAAMK,OAAOC,SACxBA,SAAUb,EAAMO,MAAMK,OAAOC,SAC7BZ,QAASA","file":"static/js/30.c6aeb795.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Loader } from '../../components/loaders';\r\n\r\nconst UserView = lazy(() => import(\"./views/user\"));\r\nconst SearchPatientsView = lazy(() => import(\"./views/searchPatients\"));\r\nconst SearchPhysiciansView = lazy(() => import(\"./views/searchPhysicians\"));\r\n\r\n\r\nexport default function UserApp(props) {\r\n    const session = useSelector(s => s.session);\r\n\r\n    return (\r\n        <Suspense fallback={<Loader isLoading={true} />}>\r\n            <Switch>\r\n                <Route \r\n                    path={props.match.path}\r\n                    exact={true}\r\n                    render={(props) => {\r\n                        if (session.isPhysician) {\r\n                            return (\r\n                                <SearchPatientsView {...props} session={session} />\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <SearchPhysiciansView {...props} session={session} />\r\n                            );\r\n                        }\r\n                    }}\r\n                />\r\n                <Route\r\n                    path={`${props.match.path}/:username`}\r\n                    render={(props) => (\r\n                        <UserView\r\n                            {...props}\r\n                            key={props.match.params.username}\r\n                            username={props.match.params.username}\r\n                            session={session}\r\n                        />\r\n                    )}\r\n                />\r\n            </Switch>\r\n        </Suspense>\r\n    );\r\n}"],"sourceRoot":""}