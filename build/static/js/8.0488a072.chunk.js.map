{"version":3,"sources":["containers/appointments/views/newAppointment/progress.js","containers/appointments/views/newAppointment/utils.js","containers/appointments/views/newAppointment/physicianSection.js","containers/appointments/views/newAppointment/serviceSection.js","containers/appointments/views/newAppointment/infoSection.js","containers/appointments/views/newAppointment/newAppointmentForm.js","containers/appointments/views/newAppointment/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/form.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/dropdown.js","containers/home/titleBar.js","components/lists.js"],"names":["ProgressBar","props","value","minValue","maxValue","className","useExtendClass","widthRatio","class","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","PhysicianItem","session","user","clickable","ServiceItem","service","name","rate","PhysicianSection","id","handleClick","otherProps","useState","query","physicians","limit","state","setState","getPhysicians","useCallback","a","search","page","searchParams","URLSearchParams","append","fetch","toString","headers","authToken","response","json","newPhysicians","ok","Error","message","Math","ceil","length","prevState","updatedPhysicians","console","error","e","target","useEffect","log","load","currentStep","type","onChange","placeholder","map","physician","index","Username","callback","ServiceSection","services","getServices","url","newServices","updatedServices","isLoading","InfoSection","Date","errorMessage","for","title","handleChange","aria-describedby","aria-label","maxlength","required","label","startDate","startTime","endDate","endTime","description","rows","NewAppointmentForm","navigateToAppointments","fields","setFields","currentTarget","preventDefault","split","t","parseInt","startHour","startMinutes","endHour","endMinutes","appointmentStartTime","setHours","setMinutes","isValidDate","appointmentEndTime","method","credentials","body","JSON","stringify","patient","username","serviceId","data","prevFields","to","handleSubmit","NewAppointmentView","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Form","enctype","autoComplete","onSubmit","children","FormRow","FormGroup","FormButton","disabled","onClick","FormSubmit","FormLabel","htmlFor","FormLegend","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Dropdown","DropdownButton","data-toggle","aria-haspopup","aria-expanded","DropdownButtonToggle","DropdownMenu","aria-labelledby","labelledBy","DropdownMenuDivider","DropdownMenuButton","Boolean","Toggler","icon","DropdownMenuItem","TitleBarLink","tooltip","TitleBarLinks","TitleBarSearch","handleSearch","err","TitleBar","useSelector","s","toggleType","asList","NotificationDropDown","UserDropdown","dispatch","useDispatch","menuLinks","path","menuLink","exact","List","ListItem","ListLink","ListButton"],"mappings":"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","file":"static/js/8.0488a072.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useExtendClass } from '../../../../components/hooks';\r\n\r\n\r\nexport default function ProgressBar(props) {\r\n    const { value, minValue, maxValue } = props;\r\n    const className = useExtendClass(\"progress md-nw-appt-pgbar\", props.className);\r\n\r\n    var widthRatio = 0;\r\n    if (value && maxValue) {\r\n        widthRatio = (value / maxValue) * 100;\r\n    }\r\n\r\n    return (\r\n        <div class={className}>\r\n            <div class=\"progress-bar\" role=\"progressbar\" style={{width: `${widthRatio}%`}}\r\n                aria-valuenow={`${value}`} aria-valuemin={`${minValue}`} aria-valuemax={`${maxValue}`}>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { LgIcon } from '../../../../components/icons';\r\nimport { Col, FluidContainer, Row } from '../../../../components/layout';\r\nimport { BioData, Currency, FullName, ProfilePhoto } from '../../../../components/users';\r\n\r\n\r\nexport function PhysicianItem(props) {\r\n    return (\r\n        <FluidContainer>\r\n            <Row>\r\n                <Col className=\"col-auto\">\r\n                    <ProfilePhoto\r\n                        className=\"md-pfl-sm\"\r\n                        session={props.session}\r\n                        user={props.user}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <Row className=\"text-truncate\">{<FullName user={props.user} />}</Row>\r\n                    <Row className=\"md-font-sm text-truncate text-muted\">\r\n                        {<BioData user={props.user} />}\r\n                    </Row>\r\n                </Col>\r\n                {(props.clickable) &&\r\n                    <Col className=\"col-auto d-flex align-items-center\">\r\n                        <LgIcon>navigate_next</LgIcon>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </FluidContainer>\r\n    );\r\n}\r\n\r\n\r\nexport function ServiceItem(props) {\r\n    return (\r\n        <FluidContainer>\r\n            <Row>\r\n                <Col>\r\n                    <Row className=\"text-truncate\">{props.service.name}</Row>\r\n                    <Row className=\"md-font-sm text-truncate text-muted\">\r\n                        {<Currency value={props.service.rate} />}\r\n                    </Row>\r\n                </Col>\r\n                {(props.clickable) &&\r\n                    <Col className=\"col-auto d-flex align-items-center\">\r\n                        <LgIcon>navigate_next</LgIcon>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </FluidContainer>\r\n    );\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { FormGroup, FormLabel } from '../../../../components/form';\r\nimport { List, ListButton } from '../../../../components/lists';\r\nimport { AutoLoader } from '../../../../components/loaders';\r\nimport { Username } from '../../../../components/users';\r\nimport { PhysicianItem } from './utils';\r\n\r\n\r\nexport default function PhysicianSection(props) {\r\n    const { id, name, handleClick, ...otherProps } = props;\r\n\r\n    const [state, setState] = useState({\r\n        query: \"\",\r\n        physicians: [],\r\n        limit: 25\r\n    });\r\n\r\n    const getPhysicians = useCallback( async({search='', page=0, limit=10}) => {\r\n        try {\r\n            const url = `/api/users`;\r\n            const searchParams = new URLSearchParams();\r\n            searchParams.append('view', 'physician');\r\n            searchParams.append('search', search);\r\n            searchParams.append('page', page);\r\n            searchParams.append('limit', limit);\r\n\r\n            const response = await fetch(`${url}?${searchParams.toString()}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n\r\n            let newPhysicians = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(newPhysicians.message);\r\n            }\r\n\r\n            return newPhysicians;\r\n        } catch (err) {\r\n            throw(err);\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        async function load() {\r\n            try {\r\n                const newPhysicians = await getPhysicians({\r\n                    search: state.query,\r\n                    page: 0,\r\n                    limit: state.limit\r\n                });\r\n\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        physicians: [...newPhysicians]\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                console.log(`Failed to load physicians based on search. ${err}`);\r\n            }\r\n        }\r\n\r\n        load();\r\n    }, [state.query, state.limit]);\r\n\r\n    async function appendPhysicians() {\r\n        try {\r\n            const newPhysicians = await getPhysicians({\r\n                search: state.query,\r\n                page: Math.ceil(state.physicians.length / state.limit),\r\n                limit: state.limit\r\n            });\r\n\r\n            setState(prevState => {\r\n                const updatedPhysicians = [...prevState.physicians, ...newPhysicians];\r\n                return {\r\n                    ...prevState,\r\n                    physicians: updatedPhysicians\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.error(`Failed to append to physician suggestions. ${err}`);\r\n        }\r\n    }\r\n\r\n    async function handleChange(e) {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n            physicians: []\r\n        });\r\n    }\r\n\r\n    if (props.currentStep !== 1) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormGroup>\r\n                <FormLabel className=\"text-muted\">Select a Physician</FormLabel>\r\n                <input id={id} type=\"text\" className=\"form-control\"\r\n                    name=\"query\" value={state.query} onChange={handleChange}\r\n                        placeholder=\"Full Name or Username\" {...otherProps} />\r\n            </FormGroup>\r\n            {(state.query.length > 0) &&\r\n                <FormGroup>\r\n                    <List className=\"md-list\">\r\n                        {state.physicians.map((physician, index) => (\r\n                            <ListButton\r\n                                key={index}\r\n                                name={name}\r\n                                value={Username({ user: physician })}\r\n                                handleClick={handleClick}\r\n                            >\r\n                                <PhysicianItem\r\n                                    session={props.session}\r\n                                    user={physician} \r\n                                    clickable={true}\r\n                                />\r\n                            </ListButton>\r\n                        ))}\r\n                    </List>\r\n                    <AutoLoader callback={appendPhysicians} />\r\n                </FormGroup>\r\n            }\r\n        </>\r\n    );\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { FormGroup, FormLabel } from '../../../../components/form';\r\nimport { ServiceItem } from './utils';\r\nimport { AutoLoader, Loader } from '../../../../components/loaders';\r\nimport { List, ListButton } from '../../../../components/lists';\r\n\r\n\r\nexport default function ServiceSection(props) {\r\n    const [state, setState] = useState({\r\n        services: [],\r\n        limit: 25\r\n    });\r\n\r\n    const getServices = useCallback( async({physician='', page=0, limit=10}) => {\r\n        try {\r\n            const url = `/api/users/${physician}/services`;\r\n            const searchParams = new URLSearchParams();\r\n            searchParams.append('page', page);\r\n            searchParams.append('limit', limit);\r\n\r\n            const response = await fetch(`${url}?${searchParams.toString()}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n\r\n            let newServices = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(newServices.message);\r\n            }\r\n\r\n            return newServices;\r\n        } catch (err) {\r\n            throw(err);\r\n        }\r\n    });\r\n    \r\n    useEffect(() => {\r\n        async function load() {\r\n            try {\r\n                const newServices = await getServices({\r\n                    physician: props.physician,\r\n                    page: 0,\r\n                    limit: state.limit\r\n                });\r\n                \r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        services: [...newServices]\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                console.log(`Failed to load services for selected physician. ${err}`);\r\n            }\r\n        }\r\n\r\n        if (props.physician) {\r\n            load();\r\n        }\r\n    }, [props.physician, state.limit]);\r\n\r\n    async function appendServices() {\r\n        try {\r\n            const newServices = await getServices({\r\n                physician: props.physician,\r\n                page: Math.ceil(state.services.length / state.limit),\r\n                limit: state.limit\r\n            });\r\n\r\n            setState(prevState => {\r\n                const updatedServices = [...prevState.services, ...newServices];\r\n                return {\r\n                    ...prevState,\r\n                    physicians: updatedServices\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(`Failed to append more services. ${err}`);\r\n        }\r\n    }\r\n\r\n    if (props.currentStep !== 2) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            <FormLabel className=\"text-muted\">Choose a Service</FormLabel>\r\n            {\r\n                (state.services.length === 0) ?\r\n                <>\r\n                    <Loader isLoading={true} />\r\n                </> :\r\n                <>\r\n                    <List className=\"md-list\">\r\n                        {state.services.map((service, index) => (\r\n                            <ListButton\r\n                                key={index}\r\n                                name={props.name}\r\n                                value={service.id}\r\n                                handleClick={props.handleClick}\r\n                            >\r\n                                <ServiceItem\r\n                                    session={props.session}\r\n                                    service={service} \r\n                                    clickable={true}\r\n                                />\r\n                            </ListButton>\r\n                        ))}\r\n                    </List>\r\n                    <AutoLoader callback={appendServices} />\r\n                </>\r\n            }\r\n        </FormGroup>\r\n    );\r\n}","import React from 'react';\r\nimport { DateInput, SelectTime } from '../../../../components/dates';\r\nimport { FormGroup, FormLabel, FormRow, FormSubmit } from '../../../../components/form';\r\n\r\n\r\nexport default function InfoSection(props) {\r\n    if (props.currentStep !== 3) {\r\n        return null;\r\n    }\r\n\r\n    const today = new Date();\r\n    return (\r\n        <>\r\n            {(props.errorMessage) &&\r\n                <FormRow className=\"justify-content-center\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">{props.errorMessage}</div>\r\n                </FormRow>\r\n            }\r\n            <FormGroup>\r\n                <FormLabel for=\"newApptInput3\" className=\"text-muted\">Add a new Title</FormLabel>\r\n                <input id=\"newApptInput3\" type=\"text\" name=\"title\" className=\"form-control\"\r\n                    placeholder=\"New Title\" value={props.title} onChange={props.handleChange}\r\n                        aria-describedby=\"titleHelpBlock\" aria-label=\"Title\" maxlength=\"75\" \r\n                            required>\r\n                </input>\r\n                <small id=\"titleHelpBlock\" className=\"form-text text-muted help-text\">\r\n                    Your title must not exceed a maximum of 75 characters.\r\n                </small>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <FormLabel for=\"newApptInput4\" className=\"text-muted\">Start time</FormLabel>\r\n                <FormRow>\r\n                    <FormGroup className=\"col-6\">\r\n                        <DateInput\r\n                            id=\"newApptInput4\"\r\n                            className=\"form-control\"\r\n                            name=\"startDate\"\r\n                            label=\"Start Date\"\r\n                            value={props.startDate}\r\n                            handleChange={props.handleChange}\r\n                            required={true}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"col-6\">\r\n                        <SelectTime\r\n                            id=\"newApptInput5\"\r\n                            className=\"form-control\"\r\n                            name=\"startTime\"\r\n                            label=\"Start Time\"\r\n                            value={props.startTime}\r\n                            handleChange={props.handleChange}\r\n                            required={true}\r\n                        />\r\n                    </FormGroup>\r\n                </FormRow>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <FormLabel for=\"newApptInput4\" className=\"text-muted\">End time</FormLabel>\r\n                <FormRow>\r\n                    <FormGroup className=\"col-6\">\r\n                        <DateInput\r\n                            id=\"newApptInput6\"\r\n                            className=\"form-control\"\r\n                            name=\"endDate\"\r\n                            label=\"End Date\"\r\n                            value={props.endDate}\r\n                            handleChange={props.handleChange}\r\n                            required={true}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"col-6\">\r\n                        <SelectTime\r\n                            id=\"newApptInput7\"\r\n                            className=\"form-control\"\r\n                            name=\"endTime\"\r\n                            label=\"End Time\"\r\n                            value={props.endTime}\r\n                            handleChange={props.handleChange}\r\n                            required={true}\r\n                        />\r\n                    </FormGroup>\r\n                </FormRow>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <FormLabel for=\"newApptInput8\" className=\"text-muted\">Description</FormLabel>\r\n                <textarea id=\"newApptInput11\" type=\"text\" name=\"description\" className=\"form-control\"\r\n                    placeholder=\"Add a description\" value={props.description} onChange={props.handleChange}\r\n                        aria-describedby=\"descriptionHelpBlock\" aria-label=\"Physician\" \r\n                            rows=\"3\" maxlength=\"300\" required>\r\n                </textarea>\r\n                <small id=\"descriptionHelpBlock\" className=\"form-text text-muted help-text\">\r\n                    Your description must not exceed a maximum of 300 characters.\r\n                </small>\r\n            </FormGroup>\r\n            <FormRow className=\"d-flex justify-content-center m-2\">\r\n                <FormSubmit>Request Appointment</FormSubmit>\r\n            </FormRow>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form } from '../../../../components/form';\r\nimport { isValidDate } from '../../../../components/dates';\r\n\r\nimport ProgressBar from './progress';\r\nimport PhysicianSection from './physicianSection';\r\nimport ServiceSection from './serviceSection';\r\nimport InfoSection from './infoSection';\r\n\r\n\r\nexport default function NewAppointmentForm(props) {\r\n    const minSteps = 1;\r\n    const maxSteps = 3;\r\n\r\n    const [fields, setFields] = useState({\r\n        currentStep: minSteps,\r\n        navigateToAppointments: false,\r\n        errorMessage: '',\r\n        physician: '',\r\n        service: '',\r\n        startDate: '',\r\n        startTime: \"00:00\",\r\n        endDate: '',\r\n        endTime: \"00:00\",\r\n        description: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (fields.service || fields.physician) {\r\n            setFields(prevFields => {\r\n                return {\r\n                    ...fields,\r\n                    currentStep: prevFields.currentStep + 1\r\n                }\r\n            });\r\n        }\r\n    }, [fields.physician, fields.service]);\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.currentTarget.name]: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (fields.currentStep === maxSteps) {\r\n            try {\r\n                const [ startHour, startMinutes ] = fields.startTime.split(':').map(t => parseInt(t));\r\n                const [ endHour, endMinutes ] = fields.endTime.split(':').map(t => parseInt(t));\r\n    \r\n                const appointmentStartTime = new Date(fields.startDate);\r\n                appointmentStartTime.setHours(startHour);\r\n                appointmentStartTime.setMinutes(startMinutes);\r\n\r\n                if (!isValidDate(appointmentStartTime)) {\r\n                    throw new Error(\"Invalid Start time. Must be a valid date.\");\r\n                }\r\n\r\n                const appointmentEndTime = new Date(fields.endDate);\r\n                appointmentEndTime.setHours(endHour);\r\n                appointmentEndTime.setMinutes(endMinutes);\r\n\r\n                if (!isValidDate(appointmentEndTime)) {\r\n                    throw new Error(\"Invalid End time. Must be a valid date.\");\r\n                }\r\n\r\n                if (appointmentEndTime <= appointmentStartTime) {\r\n                    throw new Error(\"Appointment End time cannot be before its Start time.\");\r\n                }\r\n    \r\n                const response = await fetch(`/api/appointments`, {\r\n                    method: 'POST',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                      'Authorization': `Bearer ${props.session.authToken}`\r\n                    },\r\n                    body: JSON.stringify({\r\n                      title: fields.title,\r\n                      patient: props.session.username,\r\n                      physician: fields.physician,\r\n                      serviceId: fields.service,\r\n                      startTime: appointmentStartTime,\r\n                      endTime: appointmentEndTime,\r\n                      description: fields.description\r\n                    })\r\n                });\r\n    \r\n                let data = await response.json();\r\n                if (!response.ok) {\r\n                    throw new Error(data.message);\r\n                }\r\n    \r\n                setFields({\r\n                    ...fields,\r\n                    navigateToAppointments: true\r\n                });\r\n            } catch (err) {\r\n                console.error(`Failed to add a new appointment: ${err.message}`);\r\n                setFields({\r\n                    ...fields,\r\n                    errorMessage: err.message\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    if (fields.navigateToAppointments === true) {\r\n        return <Redirect to=\"/appointments\" />\r\n      }\r\n\r\n    return (\r\n        <Form className=\"md-nw-appt\" handleSubmit={handleSubmit}>\r\n            <ProgressBar \r\n                className=\"mb-3\"\r\n                value={fields.currentStep}\r\n                minValue={minSteps}\r\n                maxValue={maxSteps}\r\n            />\r\n            <PhysicianSection\r\n                currentStep={fields.currentStep}\r\n                id=\"newAppt01\"\r\n                session={props.session}\r\n                name=\"physician\"\r\n                handleClick={handleChange}\r\n                physician={fields.physician}\r\n            />\r\n            <ServiceSection \r\n                currentStep={fields.currentStep}\r\n                id=\"newAppt02\"\r\n                session={props.session}\r\n                name=\"service\"\r\n                handleClick={handleChange}\r\n                physician={fields.physician}\r\n            />\r\n            <InfoSection\r\n                currentStep={fields.currentStep}\r\n                session={props.session}\r\n                handleChange={handleChange}\r\n                title={fields.title}\r\n                startDate={fields.startDate}\r\n                startTime={fields.startTime}\r\n                endDate={fields.endDate}\r\n                endTime={fields.endTime}\r\n                description={fields.description}\r\n                errorMessage={fields.errorMessage}\r\n            />\r\n        </Form>\r\n    );\r\n}","import React from 'react';\r\nimport { Col, Row } from '../../../../components/layout';\r\n\r\nimport TitleBar from '../../../home/titleBar';\r\nimport NewAppointmentForm from './newAppointmentForm';\r\n\r\n\r\nexport default function NewAppointmentView(props) {\r\n    return (\r\n        <>\r\n            <TitleBar title=\"New Appointment\" />\r\n            <Row>\r\n                <Col>\r\n                    <NewAppointmentForm\r\n                        session={props.session}\r\n                        physician={props.physician}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport { useExtendClass } from \"./hooks.js\";\r\n\r\n\r\n/* Form layout components */\r\nexport function Form(props) {\r\n    const enctype = (props.enctype) ? props.enctype: \"application/x-www-form-urlencoded\";\r\n\r\n    return (\r\n        <form method=\"post\" autoComplete={props.autoComplete} enctype={enctype}\r\n            className={useExtendClass(\"\", props.className)} onSubmit={props.handleSubmit}>\r\n            {props.children}\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport function FormRow(props) {  \r\n    return (\r\n        <div className={useExtendClass(\"form-row\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function FormGroup(props) {  \r\n    return (\r\n        <div className={useExtendClass(\"form-group\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/* Form element components. */\r\nexport function FormButton(props) {  \r\n    return (\r\n        <button type={(props.type) ? props.type: \"button\"} disabled={props.disabled}\r\n            className={useExtendClass(\"btn\", props.className)} onClick={props.handleClick}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport function FormSubmit(props) {\r\n    return (\r\n        <FormButton type=\"submit\" disabled={props.disabled}\r\n            className={useExtendClass(\"btn-primary\", props.className)}>\r\n            {props.children}\r\n        </FormButton>\r\n    );\r\n}\r\n\r\n\r\nexport function FormText(props) {  \r\n    return (\r\n        <input type=\"text\" id={props.id} value={props.value} readOnly \r\n            className={useExtendClass(\"form-control-plaintext\", props.className)}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport function FormLabel(props) {  \r\n    return (\r\n        <label htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\r\n            {props.children}\r\n        </label>\r\n    );\r\n  }\r\n\r\n\r\nexport function FormLegend(props) {  \r\n    return (\r\n        <legend htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\r\n            {props.children}\r\n        </legend>\r\n    );\r\n}\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useExtendClass } from './hooks';\r\n\r\n\r\nexport function Dropdown(props) {\r\n    return (\r\n        <div className={useExtendClass(\"dropdown\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function DropdownButton(props) {\r\n    return (\r\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\" \r\n            className={useExtendClass(\"btn\", props.className)}\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport function DropdownButtonToggle(props) {\r\n    return (\r\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\"\r\n            className={useExtendClass(\"btn dropdown-toggle\", props.className)}\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport function DropdownMenu(props) {\r\n    return (\r\n        <div aria-labelledby={props.labelledBy}\r\n            className={useExtendClass(\"dropdown-menu\", props.className)} >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuDivider(props) {\r\n    return (\r\n        <div className={useExtendClass(\"dropdown-divider\", props.className)}></div>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuLink(props) {\r\n    return (\r\n        <Link \r\n            to={props.url} exact={props.exact}\r\n            className={useExtendClass(\"dropdown-item\", props.className)}\r\n        >\r\n                {props.children}\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuButton(props) {\r\n    return (\r\n        <button type=\"button\" onClick={props.handleClick}\r\n            className={useExtendClass(\"dropdown-item\", props.className)}\r\n                name={props.name} value={props.value} disabled={Boolean(props.disabled)}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DropdownButton } from '../../components/buttons';\r\nimport { DropdownButtonToggle } from '../../components/dropdown';\r\nimport { Form } from '../../components/form';\r\nimport { useExtendClass } from '../../components/hooks';\r\nimport { LgIcon } from '../../components/icons';\r\nimport { Nav, NavBar, NavBrand, NavCollapsible, NavDropdown, NavDropdownLink, NavDropdownMenu, \r\n    NavDropdownMenuHeader, NavDropdownMenuItem, NavLink, NavLinks, NavToggler } from '../../components/navs';\r\nimport { ProfilePhoto } from '../../components/users';\r\n\r\n\r\nfunction Toggler(props) {\r\n    const { className, icon, ...otherProps } = props;\r\n    return (\r\n        <NavToggler\r\n            className={useExtendClass(\"md-btn p-2 mx-1\", className)}\r\n            {...otherProps}\r\n        >\r\n            <LgIcon className=\"d-flex align-items-center\">{icon}</LgIcon>\r\n        </NavToggler>\r\n    );\r\n}\r\n\r\n\r\nfunction DropdownMenuItem(props) {\r\n    const { title, icon, ...otherProps } = props;\r\n    return (\r\n        <NavDropdownMenuItem\r\n            className=\"md-mi d-flex align-items-center\"\r\n            {...otherProps}\r\n        >\r\n            <LgIcon>{icon}</LgIcon>\r\n            <p className=\"my-0 pl-2 text-truncate\">{title}</p>\r\n        </NavDropdownMenuItem>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarLink(props) {\r\n    const { className, title, icon, ...otherProps } = props;\r\n    return (\r\n        <NavLink\r\n            { ...otherProps }\r\n            className={useExtendClass(\"md-btn mx-1 p-2 d-flex align-items-center\", className)}\r\n            tooltip={title}\r\n            role=\"button\"\r\n        >\r\n            <LgIcon>{icon}</LgIcon>\r\n            <p className=\"my-0 pl-2 text-truncate d-md-none\">{title}</p>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarLinks(props) {\r\n    return (\r\n        <NavLinks>\r\n            {props.children}\r\n        </NavLinks>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarSearch(props) {\r\n    const [fields, setFields] = useState({\r\n        query: \"\"\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            if (props.handleSearch) {\r\n                props.handleSearch(fields.query);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to handle search query. ${err}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form handleSubmit={handleSubmit}\r\n            className={useExtendClass(\"form-inline mx-1 my-2 my-lg-0\", props.className)} >\r\n            <div className=\"input-group w-100\">\r\n                <input id=\"titlebarSearch01\" type=\"text\" className=\"form-control\" name=\"query\"\r\n                    placeholder={props.placeholder} value={fields.query} onChange={handleChange}\r\n                        aria-label=\"Search Query\" aria-describedby=\"titlebarSearch02\" />\r\n                <div className=\"input-group-append\">\r\n                    <button id=\"titlebarSearch02\" type=\"button\" \r\n                        className=\"btn btn-sm btn-outline-secondary\" >\r\n                        <LgIcon>search</LgIcon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\nexport default function TitleBar(props) {\r\n    const session = useSelector(s => s.session);\r\n\r\n    return (\r\n        <NavBar className=\"navbar-expand-md navbar-light row md-tbar sticky-top justify-content-start\">\r\n            <Toggler\r\n                target=\"sideBar01\"\r\n                icon=\"menu\"\r\n                toggleType=\"modal\"\r\n            />\r\n            <NavBrand className=\"mr-auto p-1 font-weight-bold\">{props.title}</NavBrand>\r\n            {props.children && \r\n                <>\r\n                    <Toggler\r\n                        target=\"titleBarNav01\"\r\n                        icon=\"more_vert\"\r\n                    />\r\n                    <NavCollapsible \r\n                        id=\"titleBarNav01\"\r\n                        className=\"justify-content-end order-last order-md-4\"\r\n                    >\r\n                        {props.children}\r\n                    </NavCollapsible>\r\n                </>\r\n            }\r\n            <Nav className=\"order-md-last\" asList={true}>\r\n                <NotificationDropDown />\r\n                <UserDropdown\r\n                    session={session}\r\n                    user={session}\r\n                />\r\n            </Nav>\r\n        </NavBar>\r\n    );\r\n}\r\n\r\n\r\n// Session based components.\r\nfunction UserDropdown(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    async function signOut(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`/api/auth/signout`, {\r\n                method: 'GET',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n        \r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            dispatch({\r\n                type: \"session/reset\"\r\n            });\r\n        } catch (err) {\r\n            console.error(`Failed to sign out. ${err}`);\r\n        }\r\n    }\r\n\r\n    const menuLinks = [\r\n        {\r\n            path: `/users/${props.user.username}`,\r\n            title: \"Profile\",\r\n            icon: \"person\"\r\n        },\r\n        {\r\n            path: \"/settings\",\r\n            title: \"Settings\",\r\n            icon: \"settings\"\r\n        },\r\n        {\r\n            title: \"Sign Out\",\r\n            icon: \"logout\",\r\n            handleClick: signOut\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <NavDropdown>\r\n            <NavDropdownLink className=\"px-0 mx-1 d-flex align-items-center\">\r\n                <ProfilePhoto \r\n                    className=\"md-pfl-xs md-pfl-round\"\r\n                    session={props.session} \r\n                    user={props.user}\r\n                />\r\n            </NavDropdownLink>\r\n            <NavDropdownMenu className=\"dropdown-menu-right\">\r\n                {menuLinks.map((menuLink, index) => (\r\n                    <DropdownMenuItem\r\n                        key={index}\r\n                        path={menuLink.path}\r\n                        exact={menuLink.exact}\r\n                        title={menuLink.title}\r\n                        icon={menuLink.icon}\r\n                        handleClick={menuLink.handleClick}\r\n                    />\r\n                ))}\r\n            </NavDropdownMenu>\r\n        </NavDropdown>\r\n    );\r\n}\r\n\r\n\r\nfunction NotificationDropDown(props) {\r\n    return (\r\n        <NavDropdown className=\"mx-1 my-2\">\r\n            <DropdownButtonToggle className=\"md-btn p-2 d-flex align-items-center\">\r\n                <LgIcon>notifications</LgIcon>\r\n            </DropdownButtonToggle>\r\n            <NavDropdownMenu className=\"dropdown-menu-right\">\r\n                <NavDropdownMenuHeader>\r\n                    Coming Soon!\r\n                </NavDropdownMenuHeader>\r\n            </NavDropdownMenu>\r\n        </NavDropdown>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useExtendClass } from \"./hooks.js\";\r\n\r\n\r\n/* Component Definitions */\r\nexport function List(props) {\r\n    return (\r\n        <div className={useExtendClass(\"list-group\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function FlushedList(props) {\r\n    return (\r\n        <List className={useExtendClass(\"list-group-flush\", props.className)}>\r\n            {props.children}\r\n        </List>\r\n  );\r\n}\r\n\r\n\r\nexport function ListItem(props) {  \r\n    return (\r\n        <div className={useExtendClass(\"list-group-item\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function ListLink(props) {  \r\n    return (\r\n        <Link to={props.url} \r\n            className={useExtendClass(\"list-group-item list-group-action\", props.className)}>\r\n            {props.children}\r\n        </Link>\r\n    );\r\n}\r\n\r\n\r\nexport function ListButton(props) {\r\n    const { className, handleClick, ...otherProps } = props;\r\n\r\n    return (\r\n        <button type=\"button\" onClick={handleClick} { ...otherProps }\r\n            className={useExtendClass(\"list-group-item list-group-action\", className)}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}"],"sourceRoot":""}