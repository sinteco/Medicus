{"version":3,"sources":["containers/settings/widgets/accountInformation.js","containers/settings/widgets/deleteUser.js","containers/settings/widgets/password.js","containers/settings/widgets/physicianInformation.js","containers/settings/widgets/profilePhoto.js","containers/settings/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/form.js","components/widgets.js","components/dropdown.js","containers/home/titleBar.js","components/lists.js","components/cards.js"],"names":["EditSection","props","useState","errorMessage","setErrorMessage","firstName","user","lastName","dob","NumericDate","date","gender","emailId","phoneNumber","fields","setFields","handleChange","e","a","target","name","value","preventDefault","Date","newUserInfo","fetch","username","method","credentials","headers","session","authToken","body","JSON","stringify","response","json","data","ok","Error","message","updateUser","console","error","className","handleSubmit","role","for","type","id","onChange","placeholder","label","required","ViewSection","dobDate","AccountInformationWidget","useSelector","s","dispatch","useDispatch","editMode","setEditMode","isLoading","setIsLoading","setUser","toggleEditMode","payload","useEffect","fetchUserInfo","title","icon","handleClick","DeleteUserWidget","validateMode","setValidateMode","toggleValidateMode","deleteResponse","signOutResponse","class","currentPassword","newPassword","confirmPassword","updatePassword","minlength","maxlength","PasswordWidget","qualification","specialization","PhysicianInformationWidget","files","formData","FormData","append","updateProfilePhotoId","profilePhotoId","enctype","replace","alt","src","ProfilePhotoWidget","newProfilePhotoId","SettingsApp","isPhysician","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Form","autoComplete","useExtendClass","onSubmit","children","FormRow","FormGroup","FormButton","disabled","onClick","FormSubmit","FormLabel","htmlFor","FormLegend","WidgetRow","WidgetColumns","Widget","TitleBar","TitleButtons","TitleButton","data-toggle","TitleToggler","collapseMode","setCollapseMode","data-target","aria-expanded","aria-controls","collapseIcon","expandIcon","WidgetBody","otherProps","WidgetCollapsible","WidgetList","WidgetListItem","WidgetDropdown","labelledBy","WidgetDropdownItem","Dropdown","DropdownButton","aria-haspopup","DropdownButtonToggle","DropdownMenu","aria-labelledby","DropdownMenuDivider","DropdownMenuButton","Boolean","Toggler","DropdownMenuItem","TitleBarLink","tooltip","TitleBarLinks","TitleBarSearch","query","handleSearch","err","aria-label","aria-describedby","toggleType","asList","NotificationDropDown","UserDropdown","menuLinks","path","map","menuLink","index","exact","List","ListItem","ListLink","to","url","ListButton","Card","CardHeader","CardBody","CardFooter","BodyCard"],"mappings":"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","file":"static/js/7.15727af4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PrettyDate, DateInput, NumericDate } from '../../../components/dates';\r\nimport { Form, FormGroup, FormLabel, FormRow, FormSubmit } from '../../../components/form';\r\nimport { Col, DescriptionDetails, DescriptionList, DescriptionTerm, \r\n    FluidContainer, Row } from '../../../components/layout';\r\nimport { Loader } from '../../../components/loaders';\r\nimport { Email, FullName, Gender, GenderInput, PhoneNumber } from '../../../components/users';\r\nimport { TitleBar, TitleButton, Widget, WidgetBody } from '../../../components/widgets';\r\n\r\n\r\nfunction EditSection(props) {\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const [fields, setFields] = useState({\r\n        firstName: (props.user.firstName) ? props.user.firstName : \"\",\r\n        lastName: (props.user.lastName) ? props.user.lastName : \"\",\r\n        dob: NumericDate({ date: props.user.dob }),\r\n        gender: (props.user.gender) ? props.user.gender : \"\",\r\n        emailId: (props.user.emailId) ? props.user.emailId : \"\",\r\n        phoneNumber: (props.user.phoneNumber) ? props.user.phoneNumber : \"\"\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const dob = new Date(fields.dob);\r\n\r\n            const newUserInfo = {\r\n                firstName: fields.firstName,\r\n                lastName: fields.lastName,\r\n                dob: dob,\r\n                gender: fields.gender,\r\n                emailId: fields.emailId,\r\n                phoneNumber: fields.phoneNumber\r\n            };\r\n\r\n            const response = await fetch(`/api/users/${props.user.username}`, {\r\n                method: 'PUT',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${props.session.authToken}`\r\n                },\r\n                body: JSON.stringify(newUserInfo)\r\n            });\r\n\r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            if (props.updateUser) {\r\n                await props.updateUser(newUserInfo);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to update account information. ${err}`);\r\n            setErrorMessage(err.message);\r\n        }\r\n    }\r\n\r\n    const today = new Date();\r\n    return (\r\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\r\n            {(fields.errorMessage) &&\r\n                <FormRow className=\"justify-content-center\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\r\n                </FormRow>\r\n            }\r\n            <FormRow>\r\n                <FormLabel for=\"acctInput01\" className=\"col-12 col-sm-4\">Full Name</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-8\">\r\n                    <Row>\r\n                        <Col className=\"col-sm-auto\">\r\n                            <input type=\"text\" id=\"acctInput01\" name=\"firstName\" \r\n                                className=\"form-control\"\r\n                                value={fields.firstName} onChange={handleChange}\r\n                                placeholder=\"First name\" \r\n                            />\r\n                        </Col>\r\n                        <Col className=\"col-sm-auto\">\r\n                            <input type=\"text\" id=\"acctInput02\" name=\"lastName\" \r\n                                className=\"form-control\"\r\n                                value={fields.lastName} onChange={handleChange}\r\n                                placeholder=\"Last name\" \r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormLabel for=\"acctInput03\" className=\"col-12 col-sm-4\">Date of Birth</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <DateInput\r\n                        id=\"acctInput03\"\r\n                        name=\"dob\"\r\n                        label=\"Date of Birth\"\r\n                        value={fields.dob}\r\n                        handleChange={handleChange}\r\n                        required={true}\r\n                    />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormLabel for=\"acctInput04\" className=\"col-12 col-sm-4\">Gender</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <GenderInput\r\n                        id=\"acctInput04\"\r\n                        className=\"form-control\"\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={fields.gender}\r\n                        handleChange={handleChange}\r\n                        required={true}\r\n                    />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormLabel for=\"acctInput05\" className=\"col-12 col-sm-4\">Email ID</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <input type=\"text\" id=\"acctInput05\" name=\"emailId\" className=\"form-control\"\r\n                        placeholder=\"Email ID\" value={fields.emailId} onChange={handleChange}\r\n                    />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormLabel for=\"acctInput06\" className=\"col-12 col-sm-4\">Phone Number</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <input type=\"text\" id=\"acctInput06\" name=\"phoneNumber\" className=\"form-control\"\r\n                        placeholder=\"Phone Number\" value={fields.phoneNumber} onChange={handleChange}\r\n                    />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow className=\"justify-content-center\">\r\n                <FormSubmit type=\"submit\" className=\"col-auto col-sm-4\">Save</FormSubmit>\r\n            </FormRow>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\nfunction ViewSection(props) {\r\n    const dobDate = new Date(props.user.dob);\r\n    return (\r\n        <FluidContainer>\r\n            <DescriptionList className=\"justify-content-center\">\r\n                <DescriptionTerm className=\"col-12 col-sm-4\">Full Name</DescriptionTerm>\r\n                <DescriptionDetails className=\"col-12 col-sm-8\">\r\n                    <FullName user={props.user} />\r\n                </DescriptionDetails>\r\n\r\n                <DescriptionTerm className=\"col-12 col-sm-4\">Date of Birth</DescriptionTerm>\r\n                <DescriptionDetails className=\"col-12 col-sm-8\">\r\n                    <PrettyDate date={dobDate} />\r\n                </DescriptionDetails>\r\n\r\n                <DescriptionTerm className=\"col-12 col-sm-4\">Gender</DescriptionTerm>\r\n                <DescriptionDetails className=\"col-12 col-sm-8\">\r\n                    <Gender user={props.user} />\r\n                </DescriptionDetails>\r\n\r\n                <DescriptionTerm className=\"col-12 col-sm-4\">Email ID</DescriptionTerm>\r\n                <DescriptionDetails className=\"col-12 col-sm-8\">\r\n                    <Email user={props.user} />\r\n                </DescriptionDetails>\r\n\r\n                <DescriptionTerm className=\"col-12 col-sm-4\">Phone Number</DescriptionTerm>\r\n                <DescriptionDetails className=\"col-12 col-sm-8\">\r\n                    <PhoneNumber user={props.user} />\r\n                </DescriptionDetails>\r\n            </DescriptionList>\r\n        </FluidContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default function AccountInformationWidget(props) {\r\n    const session = useSelector(s => s.session);\r\n    const dispatch = useDispatch();\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function fetchUserInfo() {\r\n            try {\r\n                setIsLoading(true);\r\n                const response = await fetch(`/api/users/${session.username}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${session.authToken}`\r\n                    }\r\n                });\r\n\r\n                let data = await response.json();\r\n                if (!response.ok) {\r\n                    throw new Error(data.message);\r\n                }\r\n\r\n                setUser(data);\r\n            } catch (err) {\r\n                console.error(`Failed to get user account information. ${err}`);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchUserInfo();\r\n    }, [session]);\r\n\r\n    async function toggleEditMode(e) {\r\n        e.preventDefault();\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    async function updateUser(newUserInfo) {\r\n        setUser({\r\n            ...user,\r\n            ...newUserInfo\r\n        });\r\n\r\n        dispatch({\r\n            type: \"session/set\",\r\n            payload: {\r\n                firstName: user.firstName,\r\n                lastName: user.lastName\r\n            }\r\n        });\r\n\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    return (\r\n        <Widget>\r\n            <TitleBar title=\"Account Information\">\r\n                {\r\n                    (editMode) ?\r\n                    <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleEditMode} /> :\r\n                    <TitleButton name=\"Edit\" icon=\"edit\" handleClick={toggleEditMode} />\r\n                }\r\n            </TitleBar>\r\n            <WidgetBody>\r\n                { (isLoading) ?\r\n                    <>\r\n                        <Loader isLoading={true} />\r\n                    </> :\r\n                    <>\r\n                        {\r\n                            (editMode) ?\r\n                            <>\r\n                                <EditSection\r\n                                    session={session}\r\n                                    user={user}\r\n                                    updateUser={updateUser}\r\n                                />\r\n                            </> :\r\n                            <>\r\n                                <ViewSection \r\n                                    user={user}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                }\r\n            </WidgetBody>\r\n        </Widget>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavItem } from '../../../components/navs';\r\nimport { TitleBar, TitleButton, TitleButtons, Widget, WidgetBody } from '../../../components/widgets';\r\n\r\n\r\nexport default function DeleteUserWidget(props) {\r\n    const session = useSelector(s => s.session);\r\n    const dispatch = useDispatch();\r\n\r\n    const [validateMode, setValidateMode] = useState(false);\r\n\r\n    async function toggleValidateMode(e) {\r\n        e.preventDefault();\r\n        setValidateMode(!validateMode);\r\n    }\r\n\r\n    async function clickedAccept(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const deleteResponse = await fetch(`/api/users/${session.username}`, {\r\n                method: 'DELETE',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${session.authToken}`\r\n                }\r\n            });\r\n\r\n            let data = await deleteResponse.json();\r\n            if (!deleteResponse.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            const signOutResponse = await fetch(`/api/auth/signout`, {\r\n                method: 'GET',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${session.authToken}`\r\n                }\r\n            });\r\n\r\n            data = await signOutResponse.json();\r\n            if (!signOutResponse.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            dispatch({\r\n                type: \"session/reset\"\r\n            });\r\n        } catch (err) {\r\n            console.error(`Failed to delete user. ${err}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Widget>\r\n            <TitleBar title=\"Delete Account\">\r\n                {\r\n                    (validateMode) ?\r\n                    <>\r\n                        <TitleButtons>\r\n                            <NavItem>\r\n                                <TitleButton name=\"Accept\" icon=\"check\" handleClick={clickedAccept} />\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleValidateMode} />\r\n                            </NavItem>\r\n                        </TitleButtons>\r\n                    </> :\r\n                    <>\r\n                        <TitleButton name=\"Delete\" icon=\"delete\" handleClick={toggleValidateMode} />\r\n                    </>\r\n                }\r\n            </TitleBar>\r\n            {validateMode &&\r\n                <WidgetBody>\r\n                    <div class=\"alert alert-danger\" role=\"alert\">\r\n                        Once your account is deleted, all your information is removed from our website and it cannot be retrieved back. \r\n                        Please reconsider once before proceeding. We're sad to see you leave.\r\n                    </div>\r\n                </WidgetBody>\r\n            }\r\n        </Widget>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Form, FormGroup, FormLabel, FormRow, FormSubmit } from '../../../components/form';\r\nimport { TitleBar, TitleButton, Widget, WidgetBody } from '../../../components/widgets';\r\n\r\n\r\nfunction EditSection(props) {\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [fields, setFields] = useState({\r\n        currentPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmPassword: \"\"\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            if (fields.confirmPassword !== fields.newPassword) {\r\n                throw new Error(\"New Password and Comfirm Password do not match.\");\r\n            }\r\n\r\n            const response = await fetch(`/api/auth/password`, {\r\n                method: 'PUT',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${props.session.authToken}`\r\n                },\r\n                body: JSON.stringify({\r\n                  currentPassword: fields.currentPassword,\r\n                  newPassword: fields.newPassword\r\n                })\r\n            });\r\n\r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            if (props.updatePassword) {\r\n                props.updatePassword();\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to update user password. ${err}`);\r\n            setErrorMessage(err.message);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\r\n            {(errorMessage) &&\r\n                <FormRow className=\"justify-content-center\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\r\n                </FormRow>\r\n            }\r\n            <FormRow>\r\n                <FormLabel for=\"passwordInput01\" className=\"col-12 col-sm-4\">Current Password</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <input type=\"password\" id=\"passwordInput01\" name=\"currentPassword\"\r\n                        className=\"form-control\" placeholder=\"\" value={fields.currentPassword}\r\n                            onChange={handleChange} minlength=\"8\" maxlength=\"20\" required\r\n                  />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormLabel for=\"passwordInput02\" className=\"col-12 col-sm-4\">New Password</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <input type=\"password\" id=\"passwordInput02\" name=\"newPassword\"\r\n                        className=\"form-control\" placeholder=\"\" value={fields.newPassword}\r\n                            onChange={handleChange} minlength=\"8\" maxlength=\"20\" required\r\n                  />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormLabel for=\"passwordInput03\" className=\"col-12 col-sm-4\">Confirm Password</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <input type=\"password\" id=\"passwordInput03\" name=\"confirmPassword\"\r\n                        className=\"form-control\" placeholder=\"\" value={fields.confirmPassword}\r\n                            onChange={handleChange} minlength=\"8\" maxlength=\"20\" required\r\n                  />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow className=\"justify-content-center\">\r\n                <FormSubmit className=\"col-auto col-sm-4\">Save</FormSubmit>\r\n            </FormRow>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\nexport default function PasswordWidget(props) {\r\n    const session = useSelector(s => s.session);\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    async function toggleEditMode(e) {\r\n        e.preventDefault();\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    async function updatePassword() {\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    return (\r\n        <Widget>\r\n            <TitleBar title=\"Change Password\">\r\n                {\r\n                    (editMode) ?\r\n                    <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleEditMode} /> :\r\n                    <TitleButton name=\"Edit\" icon=\"edit\" handleClick={toggleEditMode} />\r\n                }\r\n            </TitleBar>\r\n            {editMode &&\r\n                <WidgetBody>\r\n                    <EditSection \r\n                        session={session}\r\n                        updatePassword={updatePassword}\r\n                    />\r\n                </WidgetBody>\r\n            }\r\n        </Widget>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Form, FormGroup, FormLabel, FormRow, FormSubmit } from '../../../components/form';\r\nimport { DescriptionDetails, DescriptionList, DescriptionTerm, FluidContainer } from '../../../components/layout';\r\nimport { Loader } from '../../../components/loaders';\r\nimport { QualificationInput, SpecializationInput } from '../../../components/users';\r\nimport { TitleBar, TitleButton, Widget, WidgetBody } from '../../../components/widgets';\r\n\r\n\r\nfunction EditSection(props) {\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [fields, setFields] = useState({\r\n        qualification: (props.user.qualification) ? props.user.qualification: \"\",\r\n        specialization: (props.user.specialization) ? props.user.specialization: \"\"\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const newUserInfo = {\r\n                qualification: fields.qualification,\r\n                specialization: fields.specialization\r\n            };\r\n\r\n            const response = await fetch(`/api/users/${props.session.username}`, {\r\n                method: 'PUT',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${props.session.authToken}`\r\n                },\r\n                body: JSON.stringify(newUserInfo)\r\n            });\r\n\r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            if (props.updateUser) {\r\n                props.updateUser(newUserInfo);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to update physician information. ${err}`);\r\n            setErrorMessage(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\r\n            {(errorMessage) &&\r\n                <FormRow className=\"justify-content-center\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\r\n                </FormRow>\r\n            }\r\n            <FormRow>\r\n                <FormLabel for=\"physicianInput01\" className=\"col-12 col-sm-4\">Qualification</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <QualificationInput\r\n                        id=\"physicianInput01\"\r\n                        className=\"form-control\"\r\n                        name=\"qualification\"\r\n                        value={fields.qualification}\r\n                        handleChange={handleChange}\r\n                        required={true}\r\n                    />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormLabel for=\"physicianInput02\" className=\"col-12 col-sm-4\">Specialization</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <SpecializationInput\r\n                        id=\"physicianInput02\"\r\n                        className=\"form-control\"\r\n                        name=\"specialization\"\r\n                        value={fields.specialization}\r\n                        handleChange={handleChange}\r\n                        required={true}\r\n                    />\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow className=\"justify-content-center\">\r\n                <FormSubmit type=\"submit\" className=\"col-auto col-sm-4\">Save</FormSubmit>\r\n            </FormRow>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction ViewSection(props) {\r\n    return (\r\n        <FluidContainer>\r\n            <DescriptionList className=\"justify-content-center\">\r\n                <DescriptionTerm className=\"col-12 col-sm-4\">Qualification</DescriptionTerm>\r\n                <DescriptionDetails className=\"col-12 col-sm-8\">\r\n                    {props.user.qualification}\r\n                </DescriptionDetails>\r\n\r\n                <DescriptionTerm className=\"col-12 col-sm-4\">Specialization</DescriptionTerm>\r\n                <DescriptionDetails className=\"col-12 col-sm-8\">\r\n                    {props.user.specialization}\r\n                </DescriptionDetails>\r\n            </DescriptionList>\r\n        </FluidContainer>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default function PhysicianInformationWidget(props) {\r\n    const session = useSelector(s => s.session);\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function fetchUserInfo() {\r\n            try {\r\n                setIsLoading(true);\r\n                const response = await fetch(`/api/users/${session.username}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${session.authToken}`\r\n                    }\r\n                });\r\n\r\n                let data = await response.json();\r\n                if (!response.ok) {\r\n                    throw new Error(data.message);\r\n                }\r\n\r\n                setUser(data);\r\n            } catch (err) {\r\n                console.error(`Failed to get user account information. ${err}`);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchUserInfo();\r\n    }, [session]);\r\n\r\n    async function toggleEditMode(e) {\r\n        e.preventDefault();\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    async function updateUser(newUserInfo) {\r\n        setUser({\r\n            ...user,\r\n            ...newUserInfo\r\n        });\r\n\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    return (\r\n        <Widget>\r\n            <TitleBar title=\"Physician Information\">\r\n                {\r\n                    (editMode) ?\r\n                    <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleEditMode} /> :\r\n                    <TitleButton name=\"Edit\" icon=\"edit\" handleClick={toggleEditMode} />\r\n                }\r\n            </TitleBar>\r\n            <WidgetBody>\r\n                {\r\n                    (isLoading) ?\r\n                    <>\r\n                        <Loader isLoading={true} />\r\n                    </> :\r\n                    <>\r\n                        {                    \r\n                            (editMode) ?\r\n                            <>\r\n                                <EditSection \r\n                                    session={session}\r\n                                    user={user}\r\n                                    updateUser={updateUser}\r\n                                />\r\n                            </> :\r\n                            <>\r\n                                <ViewSection \r\n                                    user={user}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                }\r\n            </WidgetBody>\r\n        </Widget>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, FormButton, FormGroup, FormLabel, FormRow, FormSubmit } from '../../../components/form';\r\nimport { Col, FluidContainer, Row } from '../../../components/layout';\r\nimport { Photo } from '../../../components/users';\r\nimport { TitleBar, TitleButton, Widget, WidgetBody } from '../../../components/widgets';\r\n\r\n\r\nfunction EditSection(props) {\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [fields, setFields] = useState({\r\n        name: \"\",\r\n        data: null\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            name: e.target.value,\r\n            data: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const username = props.session.username;\r\n\r\n            let formData = new FormData();\r\n            formData.append('data', fields.data);\r\n            formData.append('isProfilePhoto', true);\r\n\r\n            const response = await fetch(`/api/users/${username}/photos`, {\r\n                method: 'POST',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                },\r\n                body: formData\r\n            });\r\n\r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            if (props.updateProfilePhotoId) {\r\n                props.updateProfilePhotoId(data.id);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to set new profile photo. ${err}`);\r\n            setErrorMessage(err.message);\r\n        }\r\n    }\r\n\r\n    async function clickedDelete(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const username = props.session.username;\r\n            const profilePhotoId = props.session.profilePhotoId;\r\n\r\n            const response = await fetch(`/api/users/${username}/photos/${profilePhotoId}`, {\r\n                method: 'DELETE',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n\r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            if (props.updateProfilePhotoId) {\r\n                props.updateProfilePhotoId(null);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to delete profile photo. ${err}`);\r\n            setErrorMessage(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit} \r\n            enctype=\"multipart/form-data\">\r\n            {(errorMessage) &&\r\n                <FormRow className=\"justify-content-center\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\r\n                </FormRow>\r\n            }\r\n            <FormRow>\r\n                <FormLabel for=\"profilePhoto01\" className=\"col-12 col-sm-4\">Select new photo</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-auto\">\r\n                    <FormRow>\r\n                        <input id=\"profilePhoto01\" type=\"file\" name=\"name\" \r\n                            className=\"custom-file-input\" value={fields.name} \r\n                                onChange={handleChange}/>\r\n                        <label className=\"custom-file-label\" for=\"generalInput07\">\r\n                            {\r\n                                (fields.name) ?\r\n                                fields.name.replace(/^.*[\\\\\\/]/, '') :\r\n                                \"Choose a file...\"\r\n                            }\r\n                    </label>\r\n                    </FormRow>\r\n                    {fields.data &&\r\n                        <FormRow>\r\n                            <FluidContainer className=\"m-2\">\r\n                                <Row for=\"profilePhoto02\">\r\n                                    <Col>Preview</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Photo\r\n                                            id=\"profilePhoto02\"\r\n                                            className=\"md-pfl-bg\"\r\n                                            alt=\"Preview Photo\"\r\n                                            src={fields.data}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FluidContainer>\r\n                        </FormRow>\r\n                    }\r\n                    <FormRow className=\"mt-3\">\r\n                        <FormSubmit>Set as Profile photo</FormSubmit>\r\n                    </FormRow>\r\n                </FormGroup>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormLabel for=\"profilePhoto03\" className=\"col-12 col-sm-4\">Remove photo</FormLabel>\r\n                <FormGroup className=\"col-12 col-sm-8\">\r\n                    <FormButton className=\"btn btn-danger\" handleClick={clickedDelete}>Remove</FormButton>\r\n                </FormGroup>\r\n            </FormRow>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default function ProfilePhotoWidget(props) {\r\n    const session = useSelector(s => s.session);\r\n    const dispatch = useDispatch();\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    async function toggleEditMode(e) {\r\n        e.preventDefault();\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    async function updateProfilePhotoId(newProfilePhotoId) {\r\n        dispatch({\r\n            type: \"session/set\",\r\n            payload: {\r\n                profilePhotoId: newProfilePhotoId\r\n            }\r\n        });\r\n\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    return (\r\n        <Widget>\r\n            <TitleBar title=\"Change Profile Photo\">\r\n                {\r\n                    (editMode) ?\r\n                    <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleEditMode} /> :\r\n                    <TitleButton name=\"Edit\" icon=\"edit\" handleClick={toggleEditMode} />\r\n                }\r\n            </TitleBar>\r\n            {(editMode) &&\r\n                <WidgetBody>\r\n                    <EditSection \r\n                        session={session}\r\n                        updateProfilePhotoId={updateProfilePhotoId}\r\n                    />\r\n                </WidgetBody>\r\n            }\r\n        </Widget>\r\n    );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, FluidContainer, Row } from '../../components/layout';\r\nimport { WidgetRow } from '../../components/widgets';\r\n\r\nimport TitleBar from '../home/titleBar';\r\nimport AccountInformationWidget from './widgets/accountInformation';\r\nimport DeleteUserWidget from './widgets/deleteUser';\r\nimport PasswordWidget from './widgets/password';\r\nimport PhysicianInformationWidget from './widgets/physicianInformation';\r\nimport ProfilePhotoWidget from './widgets/profilePhoto';\r\n\r\n\r\nexport default function SettingsApp(props) {\r\n    const session = useSelector(s => s.session);\r\n\r\n    return (\r\n        <>\r\n            <TitleBar title=\"Settings\" />\r\n            <Row className=\"flex-grow-1\">\r\n                <Col className=\"pt-3\">\r\n                    <FluidContainer>\r\n                        <WidgetRow>\r\n                            <Col>\r\n                                <AccountInformationWidget />\r\n                            </Col>\r\n                        </WidgetRow>\r\n                        <WidgetRow>\r\n                            <Col>\r\n                                <ProfilePhotoWidget />\r\n                            </Col>\r\n                        </WidgetRow>\r\n                        <WidgetRow>\r\n                            <Col>\r\n                                <PasswordWidget />\r\n                            </Col>\r\n                        </WidgetRow>\r\n                        {session.isPhysician &&\r\n                            <WidgetRow>\r\n                                <Col>\r\n                                    <PhysicianInformationWidget />\r\n                                </Col>\r\n                            </WidgetRow>\r\n                        }\r\n                        <WidgetRow>\r\n                            <Col>\r\n                                <DeleteUserWidget />\r\n                            </Col>\r\n                        </WidgetRow>\r\n                    </FluidContainer>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport { useExtendClass } from \"./hooks.js\";\r\n\r\n\r\n/* Form layout components */\r\nexport function Form(props) {\r\n    const enctype = (props.enctype) ? props.enctype: \"application/x-www-form-urlencoded\";\r\n\r\n    return (\r\n        <form method=\"post\" autoComplete={props.autoComplete} enctype={enctype}\r\n            className={useExtendClass(\"\", props.className)} onSubmit={props.handleSubmit}>\r\n            {props.children}\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport function FormRow(props) {  \r\n    return (\r\n        <div className={useExtendClass(\"form-row\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function FormGroup(props) {  \r\n    return (\r\n        <div className={useExtendClass(\"form-group\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/* Form element components. */\r\nexport function FormButton(props) {  \r\n    return (\r\n        <button type={(props.type) ? props.type: \"button\"} disabled={props.disabled}\r\n            className={useExtendClass(\"btn\", props.className)} onClick={props.handleClick}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport function FormSubmit(props) {\r\n    return (\r\n        <FormButton type=\"submit\" disabled={props.disabled}\r\n            className={useExtendClass(\"btn-primary\", props.className)}>\r\n            {props.children}\r\n        </FormButton>\r\n    );\r\n}\r\n\r\n\r\nexport function FormText(props) {  \r\n    return (\r\n        <input type=\"text\" id={props.id} value={props.value} readOnly \r\n            className={useExtendClass(\"form-control-plaintext\", props.className)}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport function FormLabel(props) {  \r\n    return (\r\n        <label htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\r\n            {props.children}\r\n        </label>\r\n    );\r\n  }\r\n\r\n\r\nexport function FormLegend(props) {  \r\n    return (\r\n        <legend htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\r\n            {props.children}\r\n        </legend>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useExtendClass } from \"./hooks\";\r\nimport { Row } from './layout';\r\nimport { BodyCard, Card, CardBody } from './cards';\r\nimport { List, ListItem, ListLink } from './lists';\r\nimport { LgIcon } from './icons';\r\nimport { Dropdown, DropdownButton, DropdownMenu, DropdownMenuButton } from './dropdown';\r\n\r\n\r\nexport function WidgetRow(props) {\r\n    return (\r\n        <Row className={useExtendClass(\"mb-3\", props.className)}>\r\n            {props.children}\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetDeck(props) {\r\n    return (\r\n        <div class={useExtendClass(\"card-deck mb-3\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetColumns(props) {\r\n    return (\r\n        <div class={useExtendClass(\"card-columns mb-3\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function Widget(props) {\r\n    return (\r\n        <Card className={useExtendClass(\"md-widget mb-3\", props.className)}>\r\n            {props.children}\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nexport function InfoWidget(props) {\r\n    return (\r\n        <BodyCard className={useExtendClass(\"md-widget mb-3\", props.className)}>\r\n            {props.children}\r\n        </BodyCard>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBar(props) {\r\n    return (\r\n        <nav className=\"card-header navbar md-title px-3 py-1\">\r\n            <h6 className=\"navbar-brand text-muted my-1 py-0\">{props.title}</h6>\r\n            {props.children}\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleButtons(props) {  \r\n    return (\r\n        <ul className={useExtendClass(\"nav\", props.className)}>\r\n            {props.children}\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleButton(props) {\r\n    return (\r\n        <button type=\"button\" data-toggle=\"tooltip\" title={props.name} \r\n            className=\"btn btn-sm p-2 d-flex align-items-center\" onClick={props.handleClick}>\r\n            <LgIcon>{props.icon}</LgIcon>\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleToggler(props) {\r\n    const [collapseMode, setCollapseMode] = useState(false);\r\n\r\n    async function handleClick(e) {\r\n        setCollapseMode(!collapseMode);\r\n    }\r\n\r\n    return (\r\n        <button type=\"button\" data-toggle=\"collapse\" data-target={`#${props.target}`}\r\n            class=\"btn btn-sm p-2 d-flex align-items-center\"\r\n            onClick={handleClick} aria-expanded=\"false\" aria-controls={props.target}>\r\n            <LgIcon>{(collapseMode) ? props.collapseIcon: props.expandIcon }</LgIcon>\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetBody(props) {\r\n    const { className, ...otherProps } = props;\r\n    return (\r\n        <CardBody className={useExtendClass(\"px-3 py-2\", className)} { ...otherProps } >\r\n            {props.children}\r\n        </CardBody>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetCollapsible(props) {\r\n    const { id, className, ...otherProps } = props;\r\n    return (\r\n        <WidgetBody id={id} { ...otherProps }\r\n            className={useExtendClass(\"collapse\", className)}>\r\n            {props.children}\r\n        </WidgetBody>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetList(props) {\r\n    return (\r\n        <List className=\"list-group-flush\">\r\n            {props.children}\r\n        </List>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetListItem(props) {\r\n    return (\r\n        <ListItem className=\"py-2 px-0\">\r\n            {props.children}\r\n        </ListItem>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetListLink(props) {\r\n    return (\r\n        <ListLink url={props.url} className=\"py-2 px-0\">\r\n            {props.children}\r\n        </ListLink>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetDropdown(props) {\r\n    return (\r\n        <Dropdown>\r\n            <DropdownButton id={props.id} className=\"p-2 d-flex align-items-center\">\r\n                <LgIcon>more_horiz</LgIcon>\r\n            </DropdownButton>\r\n            <DropdownMenu labelledBy={props.id} className=\"dropdown-menu-right\">\r\n                {props.children}\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\n\r\nexport function WidgetDropdownItem(props) {\r\n    const { className, ...otherProps} = props;\r\n    return (\r\n        <DropdownMenuButton \r\n            className={useExtendClass(\"d-flex align-items-center\", className)}\r\n            {...otherProps}\r\n        >\r\n            {props.children}\r\n        </DropdownMenuButton>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useExtendClass } from './hooks';\r\n\r\n\r\nexport function Dropdown(props) {\r\n    return (\r\n        <div className={useExtendClass(\"dropdown\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function DropdownButton(props) {\r\n    return (\r\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\" \r\n            className={useExtendClass(\"btn\", props.className)}\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport function DropdownButtonToggle(props) {\r\n    return (\r\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\"\r\n            className={useExtendClass(\"btn dropdown-toggle\", props.className)}\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport function DropdownMenu(props) {\r\n    return (\r\n        <div aria-labelledby={props.labelledBy}\r\n            className={useExtendClass(\"dropdown-menu\", props.className)} >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuDivider(props) {\r\n    return (\r\n        <div className={useExtendClass(\"dropdown-divider\", props.className)}></div>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuLink(props) {\r\n    return (\r\n        <Link \r\n            to={props.url} exact={props.exact}\r\n            className={useExtendClass(\"dropdown-item\", props.className)}\r\n        >\r\n                {props.children}\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuButton(props) {\r\n    return (\r\n        <button type=\"button\" onClick={props.handleClick}\r\n            className={useExtendClass(\"dropdown-item\", props.className)}\r\n                name={props.name} value={props.value} disabled={Boolean(props.disabled)}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DropdownButton } from '../../components/buttons';\r\nimport { DropdownButtonToggle } from '../../components/dropdown';\r\nimport { Form } from '../../components/form';\r\nimport { useExtendClass } from '../../components/hooks';\r\nimport { LgIcon } from '../../components/icons';\r\nimport { Nav, NavBar, NavBrand, NavCollapsible, NavDropdown, NavDropdownLink, NavDropdownMenu, \r\n    NavDropdownMenuHeader, NavDropdownMenuItem, NavLink, NavLinks, NavToggler } from '../../components/navs';\r\nimport { ProfilePhoto } from '../../components/users';\r\n\r\n\r\nfunction Toggler(props) {\r\n    const { className, icon, ...otherProps } = props;\r\n    return (\r\n        <NavToggler\r\n            className={useExtendClass(\"md-btn p-2 mx-1\", className)}\r\n            {...otherProps}\r\n        >\r\n            <LgIcon className=\"d-flex align-items-center\">{icon}</LgIcon>\r\n        </NavToggler>\r\n    );\r\n}\r\n\r\n\r\nfunction DropdownMenuItem(props) {\r\n    const { title, icon, ...otherProps } = props;\r\n    return (\r\n        <NavDropdownMenuItem\r\n            className=\"md-mi d-flex align-items-center\"\r\n            {...otherProps}\r\n        >\r\n            <LgIcon>{icon}</LgIcon>\r\n            <p className=\"my-0 pl-2 text-truncate\">{title}</p>\r\n        </NavDropdownMenuItem>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarLink(props) {\r\n    const { className, title, icon, ...otherProps } = props;\r\n    return (\r\n        <NavLink\r\n            { ...otherProps }\r\n            className={useExtendClass(\"md-btn mx-1 p-2 d-flex align-items-center\", className)}\r\n            tooltip={title}\r\n            role=\"button\"\r\n        >\r\n            <LgIcon>{icon}</LgIcon>\r\n            <p className=\"my-0 pl-2 text-truncate d-md-none\">{title}</p>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarLinks(props) {\r\n    return (\r\n        <NavLinks>\r\n            {props.children}\r\n        </NavLinks>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarSearch(props) {\r\n    const [fields, setFields] = useState({\r\n        query: \"\"\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            if (props.handleSearch) {\r\n                props.handleSearch(fields.query);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to handle search query. ${err}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form handleSubmit={handleSubmit}\r\n            className={useExtendClass(\"form-inline mx-1 my-2 my-lg-0\", props.className)} >\r\n            <div className=\"input-group w-100\">\r\n                <input id=\"titlebarSearch01\" type=\"text\" className=\"form-control\" name=\"query\"\r\n                    placeholder={props.placeholder} value={fields.query} onChange={handleChange}\r\n                        aria-label=\"Search Query\" aria-describedby=\"titlebarSearch02\" />\r\n                <div className=\"input-group-append\">\r\n                    <button id=\"titlebarSearch02\" type=\"button\" \r\n                        className=\"btn btn-sm btn-outline-secondary\" >\r\n                        <LgIcon>search</LgIcon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\nexport default function TitleBar(props) {\r\n    const session = useSelector(s => s.session);\r\n\r\n    return (\r\n        <NavBar className=\"navbar-expand-md navbar-light row md-tbar sticky-top justify-content-start\">\r\n            <Toggler\r\n                target=\"sideBar01\"\r\n                icon=\"menu\"\r\n                toggleType=\"modal\"\r\n            />\r\n            <NavBrand className=\"mr-auto p-1 font-weight-bold\">{props.title}</NavBrand>\r\n            {props.children && \r\n                <>\r\n                    <Toggler\r\n                        target=\"titleBarNav01\"\r\n                        icon=\"more_vert\"\r\n                    />\r\n                    <NavCollapsible \r\n                        id=\"titleBarNav01\"\r\n                        className=\"justify-content-end order-last order-md-4\"\r\n                    >\r\n                        {props.children}\r\n                    </NavCollapsible>\r\n                </>\r\n            }\r\n            <Nav className=\"order-md-last\" asList={true}>\r\n                <NotificationDropDown />\r\n                <UserDropdown\r\n                    session={session}\r\n                    user={session}\r\n                />\r\n            </Nav>\r\n        </NavBar>\r\n    );\r\n}\r\n\r\n\r\n// Session based components.\r\nfunction UserDropdown(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    async function signOut(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`/api/auth/signout`, {\r\n                method: 'GET',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n        \r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            dispatch({\r\n                type: \"session/reset\"\r\n            });\r\n        } catch (err) {\r\n            console.error(`Failed to sign out. ${err}`);\r\n        }\r\n    }\r\n\r\n    const menuLinks = [\r\n        {\r\n            path: `/users/${props.user.username}`,\r\n            title: \"Profile\",\r\n            icon: \"person\"\r\n        },\r\n        {\r\n            path: \"/settings\",\r\n            title: \"Settings\",\r\n            icon: \"settings\"\r\n        },\r\n        {\r\n            title: \"Sign Out\",\r\n            icon: \"logout\",\r\n            handleClick: signOut\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <NavDropdown>\r\n            <NavDropdownLink className=\"px-0 mx-1 d-flex align-items-center\">\r\n                <ProfilePhoto \r\n                    className=\"md-pfl-xs md-pfl-round\"\r\n                    session={props.session} \r\n                    user={props.user}\r\n                />\r\n            </NavDropdownLink>\r\n            <NavDropdownMenu className=\"dropdown-menu-right\">\r\n                {menuLinks.map((menuLink, index) => (\r\n                    <DropdownMenuItem\r\n                        key={index}\r\n                        path={menuLink.path}\r\n                        exact={menuLink.exact}\r\n                        title={menuLink.title}\r\n                        icon={menuLink.icon}\r\n                        handleClick={menuLink.handleClick}\r\n                    />\r\n                ))}\r\n            </NavDropdownMenu>\r\n        </NavDropdown>\r\n    );\r\n}\r\n\r\n\r\nfunction NotificationDropDown(props) {\r\n    return (\r\n        <NavDropdown className=\"mx-1 my-2\">\r\n            <DropdownButtonToggle className=\"md-btn p-2 d-flex align-items-center\">\r\n                <LgIcon>notifications</LgIcon>\r\n            </DropdownButtonToggle>\r\n            <NavDropdownMenu className=\"dropdown-menu-right\">\r\n                <NavDropdownMenuHeader>\r\n                    Coming Soon!\r\n                </NavDropdownMenuHeader>\r\n            </NavDropdownMenu>\r\n        </NavDropdown>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useExtendClass } from \"./hooks.js\";\r\n\r\n\r\n/* Component Definitions */\r\nexport function List(props) {\r\n    return (\r\n        <div className={useExtendClass(\"list-group\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function FlushedList(props) {\r\n    return (\r\n        <List className={useExtendClass(\"list-group-flush\", props.className)}>\r\n            {props.children}\r\n        </List>\r\n  );\r\n}\r\n\r\n\r\nexport function ListItem(props) {  \r\n    return (\r\n        <div className={useExtendClass(\"list-group-item\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function ListLink(props) {  \r\n    return (\r\n        <Link to={props.url} \r\n            className={useExtendClass(\"list-group-item list-group-action\", props.className)}>\r\n            {props.children}\r\n        </Link>\r\n    );\r\n}\r\n\r\n\r\nexport function ListButton(props) {\r\n    const { className, handleClick, ...otherProps } = props;\r\n\r\n    return (\r\n        <button type=\"button\" onClick={handleClick} { ...otherProps }\r\n            className={useExtendClass(\"list-group-item list-group-action\", className)}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}","import React from 'react';\r\nimport { useExtendClass } from \"./hooks.js\";\r\n\r\n\r\nexport function Card(props) {\r\n    const { className, ...otherProps } = props;\r\n    return (\r\n        <div className={useExtendClass(\"card\", className)} { ...otherProps } >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function CardHeader(props) {\r\n    const { className, ...otherProps } = props;\r\n    return (\r\n        <div className={useExtendClass(\"card-header\", className)} { ...otherProps } >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function CardBody(props) {\r\n    const { className, ...otherProps } = props;\r\n    return (\r\n        <div className={useExtendClass(\"card-body\", className)} { ...otherProps } >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function CardFooter(props) {\r\n    const { className, ...otherProps } = props;\r\n    return (\r\n        <div className={useExtendClass(\"card-footer\", className)} { ...otherProps } >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function BodyCard(props) {\r\n    const { className, ...otherProps } = props;\r\n    return (\r\n        <div className={useExtendClass(\"card card-body\", className)} { ...otherProps } >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}