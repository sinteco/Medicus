{"version":3,"sources":["containers/chats/chat/detailedView/messageWindow.js","containers/chats/chat/detailedView/sendMessage.js","containers/chats/chat/detailedView/index.js","containers/chats/chat/index.js","containers/chats/views/chatView.js","components/form.js","components/dropdown.js","containers/home/titleBar.js"],"names":["MessageWindow","props","bottomRef","useRef","useState","messages","limit","state","setState","a","chat","url","id","searchParams","URLSearchParams","append","Math","ceil","length","fetch","toString","headers","session","authToken","messagesResponse","json","data","ok","Error","message","newMessages","reverse","prevState","updatedMessages","console","error","useEffect","currentBottomRef","current","scrollIntoView","behavior","block","inline","err","channel","on","lastTimestamp","lastUsername","messageItems","entries","idx","timestamp","Date","toDateString","dateItem","className","date","push","currentUsername","sender","isCurrentUser","username","chatAlign","chatColor","chatSpacing","messageItem","content","callback","ref","SendMessageForm","fields","setFields","e","target","name","value","preventDefault","emit","chatId","Username","user","autoComplete","handleSubmit","type","aria-label","onChange","placeholder","disabled","isDisabled","SendMessageBar","DetailedView","setChannel","reconnect","connected","connect","newChannel","io","debug","log","response","status","close","closeChannel","isLoading","title","path","appointmentId","icon","Chat","setIsLoading","setChat","credentials","initialize","listView","ChatView","Form","enctype","method","useExtendClass","onSubmit","children","FormRow","FormGroup","FormButton","onClick","handleClick","FormSubmit","FormLabel","htmlFor","for","FormLegend","Dropdown","DropdownButton","data-toggle","aria-haspopup","aria-expanded","DropdownButtonToggle","DropdownMenu","aria-labelledby","labelledBy","DropdownMenuDivider","DropdownMenuButton","Boolean","Toggler","otherProps","DropdownMenuItem","TitleBarLink","tooltip","role","TitleBarLinks","TitleBarSearch","query","handleSearch","aria-describedby","TitleBar","useSelector","s","toggleType","asList","NotificationDropDown","UserDropdown","dispatch","useDispatch","menuLinks","map","menuLink","index","exact"],"mappings":"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","file":"static/js/12.5d8ea728.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Col, FluidContainer, Row } from '../../../../components/layout';\r\nimport { FullTime, PrettyDate } from '../../../../components/dates';\r\nimport { AutoLoader } from '../../../../components/loaders';\r\n\r\n\r\nexport default function MessageWindow(props) {\r\n    const bottomRef = useRef(null);\r\n\r\n    const [state, setState] = useState({\r\n        messages: [],\r\n        limit: 10\r\n    });\r\n\r\n    useEffect(() => {\r\n        const currentBottomRef = bottomRef.current;\r\n\r\n        async function appendMessage(message) {\r\n            try {\r\n                setState(prevState => {\r\n                    const updatedMessages = [...prevState.messages, message];\r\n\r\n                    return {\r\n                        ...prevState,\r\n                        messages: updatedMessages\r\n                    }\r\n                });\r\n            \r\n                currentBottomRef.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"end\",\r\n                    inline: \"nearest\"\r\n                });\r\n            } catch (err) {\r\n                console.error(`Failed to receive chat message from server. ${err}`);\r\n            }\r\n        }\r\n\r\n        if (props.channel) {\r\n            props.channel.on('chat', appendMessage);\r\n        }\r\n    }, [props.channel]);\r\n\r\n    async function appendMessages() {\r\n        try {\r\n            if (props.chat) {\r\n                const url = `/api/chats/${props.chat.id}/messages`;\r\n\r\n                const searchParams = new URLSearchParams();\r\n                searchParams.append('page', Math.ceil(state.messages.length / state.limit));\r\n                searchParams.append('limit', state.limit);\r\n\r\n                const messagesResponse = await fetch(`${url}?${searchParams.toString()}`, {\r\n                    headers: {\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                    }\r\n                });\r\n            \r\n                let data = await messagesResponse.json();\r\n                if (!messagesResponse.ok) {\r\n                    throw new Error(data.message);\r\n                }\r\n            \r\n                const newMessages = data.reverse();\r\n                setState(prevState => {\r\n                    const updatedMessages = [ ...newMessages, ...prevState.messages ];\r\n\r\n                    return {\r\n                        ...prevState,\r\n                        messages: updatedMessages\r\n                    }\r\n                });\r\n            }   \r\n        } catch (err) {\r\n            console.error(`Failed to append chat messages. ${err}`);\r\n        }\r\n    }\r\n\r\n    // Now render message window.\r\n    let lastTimestamp = null;\r\n    let lastUsername = \"\";\r\n\r\n    const messageItems = [];\r\n    for (const [idx, message] of state.messages.entries()) {\r\n        let timestamp = new Date(message.timestamp);\r\n\r\n        if (!lastTimestamp || lastTimestamp.toDateString() !== timestamp.toDateString()) {\r\n            let dateItem = (\r\n                <Row key={`date-${idx}`} className=\"justify-content-center mt-3\">\r\n                    <Col className=\"col-auto md-chat-sys\">\r\n                        <p className=\"md-font-sm my-0 text-muted\">\r\n                            <PrettyDate date={timestamp} />\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n\r\n            messageItems.push(dateItem);\r\n            lastTimestamp = timestamp;\r\n            lastUsername = \"\";\r\n        }\r\n\r\n        let currentUsername = message.sender;\r\n        let isCurrentUser = (props.session.username === currentUsername) ? true: false;\r\n\r\n        let chatAlign = (isCurrentUser) ? \"justify-content-end\": \"justify-content-start\";\r\n        let chatColor = (isCurrentUser) ? \"md-chat-out\": \"md-chat-in\";\r\n        let chatSpacing = (lastUsername === currentUsername) ? \"mt-1\": \"mt-3\";\r\n\r\n        let messageItem = (\r\n            <Row key={idx} className={`${chatAlign} ${chatSpacing}`}>\r\n                <Col className=\"col-10\">\r\n                    <Row className={chatAlign}>\r\n                        <FluidContainer className={`md-chat-msg ${chatColor} mx-2 p-2`}>\r\n                            <p className=\"my-0\">{message.content}</p>\r\n                            <footer className=\"d-flex justify-content-end\">\r\n                                <p className=\"my-0 md-font-xs text-muted\">\r\n                                    <FullTime date={timestamp} />\r\n                                </p>\r\n                            </footer>\r\n                        </FluidContainer>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        );\r\n\r\n        messageItems.push(messageItem);\r\n        lastUsername = currentUsername;\r\n    }\r\n\r\n    return (\r\n        <Row className=\"md-msg-window flex-grow-1 overflow-y border-top border-bottom\">\r\n            <Col>\r\n                <AutoLoader callback={appendMessages} />\r\n                {messageItems}\r\n                <span ref={bottomRef} className=\"p-1\"></span>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Form, FormButton, FormGroup, FormRow } from '../../../../components/form';\r\nimport { LgIcon } from '../../../../components/icons';\r\nimport { Col, Footer } from '../../../../components/layout';\r\nimport { Username } from '../../../../components/users';\r\n\r\n\r\nfunction SendMessageForm(props) {\r\n    const [fields, setFields] = useState({\r\n        content: \"\"\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const timestamp = new Date();\r\n      \r\n            await props.channel.emit('chat', {\r\n                chatId: props.chat.id,\r\n                sender: Username({ user: props.session }),\r\n                timestamp: timestamp,\r\n                content: fields.content\r\n            });\r\n\r\n            setFields({\r\n                ...fields,\r\n                content: \"\"\r\n            });\r\n        } catch (err) {\r\n            console.error(`Failed to send chat message. ${err}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form autoComplete=\"off\" handleSubmit={handleSubmit}>\r\n            <FormRow>\r\n                <FormGroup className=\"col my-2\">\r\n                    <input type=\"text\" name=\"content\" aria-label=\"Input chat message\"\r\n                        className=\"form-control\" value={fields.content} onChange={handleChange}\r\n                        placeholder=\"\" disabled={props.isDisabled}>\r\n                    </input>\r\n                </FormGroup>\r\n                <FormGroup className=\"col-auto my-2\">\r\n                    <FormButton type=\"submit\" className=\"md-btn p-2 d-flex align-items-center\"\r\n                        disabled={props.isDisabled}>\r\n                        <LgIcon>send</LgIcon>\r\n                    </FormButton>\r\n                </FormGroup>\r\n            </FormRow>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\nexport default function SendMessageBar(props) {\r\n    return (\r\n        <Footer className=\"md-sbar p-2 justify-content-center\">\r\n            <Col>\r\n                <SendMessageForm\r\n                    session={props.session}\r\n                    chat={props.chat}\r\n                    channel={props.channel}\r\n                />\r\n            </Col>\r\n        </Footer>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { FluidContainer } from '../../../../components/layout';\r\nimport { Loader } from '../../../../components/loaders';\r\n\r\nimport TitleBar, { TitleBarLink, TitleBarLinks } from '../../../home/titleBar';\r\nimport MessageWindow from './messageWindow';\r\nimport SendMessageBar from './sendMessage';\r\n\r\n\r\nexport default function DetailedView(props) {\r\n    const [channel, setChannel] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function reconnect() {\r\n            try {\r\n                if (channel && !channel.connected) {\r\n                    connect();\r\n                }\r\n            } catch (err) {\r\n                console.error(`Failed to reconnect to server. ${err}`);\r\n            }\r\n        }\r\n\r\n        async function connect() {\r\n            try {\r\n                const newChannel = io();\r\n\r\n                newChannel.on('connect', () => {\r\n                    console.debug(`Channel connection status: ${newChannel.connected}`);\r\n                    console.log(\"Connected to server.\");\r\n                });\r\n\r\n                newChannel.on('disconnect', reconnect);\r\n\r\n                newChannel.emit('join',\r\n                    { chatId: props.chat.id },\r\n                    (response) => {\r\n                        if (response.status === \"ok\") {\r\n                            console.debug(\"Joined chat session.\");\r\n                        } else {\r\n                            console.log(\"Failed to join chat session.\");\r\n                        }\r\n                    }\r\n                );\r\n\r\n                setChannel(newChannel);\r\n            } catch (err) {\r\n                console.error(`Failed to connect to server. ${err}`);\r\n            }\r\n        }\r\n\r\n        connect();\r\n        return function disconnect() {\r\n            async function closeChannel() {\r\n                try {\r\n                    if (channel) {\r\n                        channel.emit('leave',\r\n                            { chatId: props.chat.id },\r\n                            (response) => {\r\n                                if (response.status === \"ok\") {\r\n                                    console.debug(\"Left chat session.\");\r\n                                } else {\r\n                                    console.log(\"Failed to leave chat session.\");\r\n                                }\r\n                            }\r\n                        );\r\n\r\n                        channel.close();\r\n                        console.debug(`Channel connection status: ${channel.connected}`);\r\n                    }\r\n\r\n                    console.log(\"Disconnected from server.\");\r\n                    setChannel(null);\r\n                } catch (err) {\r\n                    console.error(`Failed to disconnect from server. ${err}`);\r\n                }\r\n            }\r\n\r\n            closeChannel();\r\n        }\r\n    }, [props.chat]);\r\n\r\n    return (\r\n        <FluidContainer className=\"d-flex flex-column md-chat h-100 px-0\">\r\n            {\r\n                (props.isLoading) ?\r\n                <>\r\n                    <Loader isLoading={true} />\r\n                </> :\r\n                <>\r\n                    <TitleBar title={props.chat.title} >\r\n                        <TitleBarLinks>\r\n                            <TitleBarLink\r\n                                path={`/appointments/${props.chat.appointmentId}`}\r\n                                title=\"Go to Appointment\"\r\n                                icon=\"event\"\r\n                            />\r\n                        </TitleBarLinks>\r\n                    </TitleBar>\r\n                    <MessageWindow \r\n                        session={props.session}\r\n                        chat={props.chat}\r\n                        channel={channel}\r\n                    />\r\n                    <SendMessageBar\r\n                        session={props.session}\r\n                        chat={props.chat}\r\n                        channel={channel}\r\n                    />\r\n                </>\r\n            }\r\n        </FluidContainer>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport DetailedView from './detailedView';\r\n\r\n\r\nexport default function Chat(props) {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [chat, setChat] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function initialize() {\r\n            try {\r\n                setIsLoading(true);\r\n                const response = await fetch(`/api/chats/${props.id}`, {\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                      'Authorization': `Bearer ${props.session.authToken}`\r\n                    }\r\n                });\r\n\r\n                let data = await response.json();\r\n                if (!response.ok) {\r\n                    throw new Error(data.message);\r\n                }\r\n\r\n                setChat(data);\r\n            } catch (err) {\r\n                console.error(`Failed to initialize chat- ${props.id}. ${err}`);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        initialize();\r\n    }, [props.id, props.session]);\r\n\r\n\r\n    if (props.listView) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <DetailedView\r\n                session={props.session}\r\n                chat={chat}\r\n                isLoading={isLoading}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Chat from '../chat';\r\n\r\n\r\nexport default function ChatView(props) {\r\n    return (\r\n        <Chat\r\n            session={props.session}\r\n            id={props.id}\r\n            listView={false}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport { useExtendClass } from \"./hooks.js\";\r\n\r\n\r\n/* Form layout components */\r\nexport function Form(props) {\r\n    const enctype = (props.enctype) ? props.enctype: \"application/x-www-form-urlencoded\";\r\n\r\n    return (\r\n        <form method=\"post\" autoComplete={props.autoComplete} enctype={enctype}\r\n            className={useExtendClass(\"\", props.className)} onSubmit={props.handleSubmit}>\r\n            {props.children}\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport function FormRow(props) {  \r\n    return (\r\n        <div className={useExtendClass(\"form-row\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function FormGroup(props) {  \r\n    return (\r\n        <div className={useExtendClass(\"form-group\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/* Form element components. */\r\nexport function FormButton(props) {  \r\n    return (\r\n        <button type={(props.type) ? props.type: \"button\"} disabled={props.disabled}\r\n            className={useExtendClass(\"btn\", props.className)} onClick={props.handleClick}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport function FormSubmit(props) {\r\n    return (\r\n        <FormButton type=\"submit\" disabled={props.disabled}\r\n            className={useExtendClass(\"btn-primary\", props.className)}>\r\n            {props.children}\r\n        </FormButton>\r\n    );\r\n}\r\n\r\n\r\nexport function FormText(props) {  \r\n    return (\r\n        <input type=\"text\" id={props.id} value={props.value} readOnly \r\n            className={useExtendClass(\"form-control-plaintext\", props.className)}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport function FormLabel(props) {  \r\n    return (\r\n        <label htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\r\n            {props.children}\r\n        </label>\r\n    );\r\n  }\r\n\r\n\r\nexport function FormLegend(props) {  \r\n    return (\r\n        <legend htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\r\n            {props.children}\r\n        </legend>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useExtendClass } from './hooks';\r\n\r\n\r\nexport function Dropdown(props) {\r\n    return (\r\n        <div className={useExtendClass(\"dropdown\", props.className)}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function DropdownButton(props) {\r\n    return (\r\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\" \r\n            className={useExtendClass(\"btn\", props.className)}\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport function DropdownButtonToggle(props) {\r\n    return (\r\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\"\r\n            className={useExtendClass(\"btn dropdown-toggle\", props.className)}\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport function DropdownMenu(props) {\r\n    return (\r\n        <div aria-labelledby={props.labelledBy}\r\n            className={useExtendClass(\"dropdown-menu\", props.className)} >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuDivider(props) {\r\n    return (\r\n        <div className={useExtendClass(\"dropdown-divider\", props.className)}></div>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuLink(props) {\r\n    return (\r\n        <Link \r\n            to={props.url} exact={props.exact}\r\n            className={useExtendClass(\"dropdown-item\", props.className)}\r\n        >\r\n                {props.children}\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport function DropdownMenuButton(props) {\r\n    return (\r\n        <button type=\"button\" onClick={props.handleClick}\r\n            className={useExtendClass(\"dropdown-item\", props.className)}\r\n                name={props.name} value={props.value} disabled={Boolean(props.disabled)}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DropdownButton } from '../../components/buttons';\r\nimport { DropdownButtonToggle } from '../../components/dropdown';\r\nimport { Form } from '../../components/form';\r\nimport { useExtendClass } from '../../components/hooks';\r\nimport { LgIcon } from '../../components/icons';\r\nimport { Nav, NavBar, NavBrand, NavCollapsible, NavDropdown, NavDropdownLink, NavDropdownMenu, \r\n    NavDropdownMenuHeader, NavDropdownMenuItem, NavLink, NavLinks, NavToggler } from '../../components/navs';\r\nimport { ProfilePhoto } from '../../components/users';\r\n\r\n\r\nfunction Toggler(props) {\r\n    const { className, icon, ...otherProps } = props;\r\n    return (\r\n        <NavToggler\r\n            className={useExtendClass(\"md-btn p-2 mx-1\", className)}\r\n            {...otherProps}\r\n        >\r\n            <LgIcon className=\"d-flex align-items-center\">{icon}</LgIcon>\r\n        </NavToggler>\r\n    );\r\n}\r\n\r\n\r\nfunction DropdownMenuItem(props) {\r\n    const { title, icon, ...otherProps } = props;\r\n    return (\r\n        <NavDropdownMenuItem\r\n            className=\"md-mi d-flex align-items-center\"\r\n            {...otherProps}\r\n        >\r\n            <LgIcon>{icon}</LgIcon>\r\n            <p className=\"my-0 pl-2 text-truncate\">{title}</p>\r\n        </NavDropdownMenuItem>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarLink(props) {\r\n    const { className, title, icon, ...otherProps } = props;\r\n    return (\r\n        <NavLink\r\n            { ...otherProps }\r\n            className={useExtendClass(\"md-btn mx-1 p-2 d-flex align-items-center\", className)}\r\n            tooltip={title}\r\n            role=\"button\"\r\n        >\r\n            <LgIcon>{icon}</LgIcon>\r\n            <p className=\"my-0 pl-2 text-truncate d-md-none\">{title}</p>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarLinks(props) {\r\n    return (\r\n        <NavLinks>\r\n            {props.children}\r\n        </NavLinks>\r\n    );\r\n}\r\n\r\n\r\nexport function TitleBarSearch(props) {\r\n    const [fields, setFields] = useState({\r\n        query: \"\"\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            if (props.handleSearch) {\r\n                props.handleSearch(fields.query);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to handle search query. ${err}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form handleSubmit={handleSubmit}\r\n            className={useExtendClass(\"form-inline mx-1 my-2 my-lg-0\", props.className)} >\r\n            <div className=\"input-group w-100\">\r\n                <input id=\"titlebarSearch01\" type=\"text\" className=\"form-control\" name=\"query\"\r\n                    placeholder={props.placeholder} value={fields.query} onChange={handleChange}\r\n                        aria-label=\"Search Query\" aria-describedby=\"titlebarSearch02\" />\r\n                <div className=\"input-group-append\">\r\n                    <button id=\"titlebarSearch02\" type=\"button\" \r\n                        className=\"btn btn-sm btn-outline-secondary\" >\r\n                        <LgIcon>search</LgIcon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\nexport default function TitleBar(props) {\r\n    const session = useSelector(s => s.session);\r\n\r\n    return (\r\n        <NavBar className=\"navbar-expand-md navbar-light row md-tbar sticky-top justify-content-start\">\r\n            <Toggler\r\n                target=\"sideBar01\"\r\n                icon=\"menu\"\r\n                toggleType=\"modal\"\r\n            />\r\n            <NavBrand className=\"mr-auto p-1 font-weight-bold\">{props.title}</NavBrand>\r\n            {props.children && \r\n                <>\r\n                    <Toggler\r\n                        target=\"titleBarNav01\"\r\n                        icon=\"more_vert\"\r\n                    />\r\n                    <NavCollapsible \r\n                        id=\"titleBarNav01\"\r\n                        className=\"justify-content-end order-last order-md-4\"\r\n                    >\r\n                        {props.children}\r\n                    </NavCollapsible>\r\n                </>\r\n            }\r\n            <Nav className=\"order-md-last\" asList={true}>\r\n                <NotificationDropDown />\r\n                <UserDropdown\r\n                    session={session}\r\n                    user={session}\r\n                />\r\n            </Nav>\r\n        </NavBar>\r\n    );\r\n}\r\n\r\n\r\n// Session based components.\r\nfunction UserDropdown(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    async function signOut(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`/api/auth/signout`, {\r\n                method: 'GET',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n        \r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            dispatch({\r\n                type: \"session/reset\"\r\n            });\r\n        } catch (err) {\r\n            console.error(`Failed to sign out. ${err}`);\r\n        }\r\n    }\r\n\r\n    const menuLinks = [\r\n        {\r\n            path: `/users/${props.user.username}`,\r\n            title: \"Profile\",\r\n            icon: \"person\"\r\n        },\r\n        {\r\n            path: \"/settings\",\r\n            title: \"Settings\",\r\n            icon: \"settings\"\r\n        },\r\n        {\r\n            title: \"Sign Out\",\r\n            icon: \"logout\",\r\n            handleClick: signOut\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <NavDropdown>\r\n            <NavDropdownLink className=\"px-0 mx-1 d-flex align-items-center\">\r\n                <ProfilePhoto \r\n                    className=\"md-pfl-xs md-pfl-round\"\r\n                    session={props.session} \r\n                    user={props.user}\r\n                />\r\n            </NavDropdownLink>\r\n            <NavDropdownMenu className=\"dropdown-menu-right\">\r\n                {menuLinks.map((menuLink, index) => (\r\n                    <DropdownMenuItem\r\n                        key={index}\r\n                        path={menuLink.path}\r\n                        exact={menuLink.exact}\r\n                        title={menuLink.title}\r\n                        icon={menuLink.icon}\r\n                        handleClick={menuLink.handleClick}\r\n                    />\r\n                ))}\r\n            </NavDropdownMenu>\r\n        </NavDropdown>\r\n    );\r\n}\r\n\r\n\r\nfunction NotificationDropDown(props) {\r\n    return (\r\n        <NavDropdown className=\"mx-1 my-2\">\r\n            <DropdownButtonToggle className=\"md-btn p-2 d-flex align-items-center\">\r\n                <LgIcon>notifications</LgIcon>\r\n            </DropdownButtonToggle>\r\n            <NavDropdownMenu className=\"dropdown-menu-right\">\r\n                <NavDropdownMenuHeader>\r\n                    Coming Soon!\r\n                </NavDropdownMenuHeader>\r\n            </NavDropdownMenu>\r\n        </NavDropdown>\r\n    );\r\n}"],"sourceRoot":""}