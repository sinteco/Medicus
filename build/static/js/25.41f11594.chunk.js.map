{"version":3,"sources":["containers/users/user/views/detailView/services/addSection.js","containers/users/user/views/detailView/services/listSection.js","containers/users/user/views/detailView/services/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["AddSection","props","useState","errorMessage","setErrorMessage","name","rate","fields","setFields","handleChange","e","a","target","value","preventDefault","newService","fetch","user","username","method","credentials","headers","session","authToken","body","JSON","stringify","response","json","data","ok","Error","message","id","appendService","title","content","console","error","className","handleSubmit","role","for","type","onChange","placeholder","min","step","DefaultServiceItem","ServiceItem","handleDelete","service","fromCurrentUser","Username","handleClick","ListSection","services","length","map","index","deleteService","ServiceSection","limit","state","setState","url","searchParams","URLSearchParams","append","Math","ceil","toString","newServices","prevState","updatedServices","filter","disableEdit","expandIcon","collapseIcon","callback","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/25.41f11594.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, FormGroup, FormLabel, FormRow, \r\n    FormSubmit } from \"../../../../../../components/form\";\r\n\r\n\r\nexport default function AddSection(props) {\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [fields, setFields] = useState({\r\n        name: \"\",\r\n        rate: 0\r\n    });\r\n\r\n    async function handleChange(e) {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            const newService = {\r\n                name: fields.name,\r\n                rate: fields.rate\r\n            };\r\n\r\n            const response = await fetch(`/api/users/${props.user.username}/services`, {\r\n                method: 'POST',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${props.session.authToken}`\r\n                },\r\n                body: JSON.stringify(newService)\r\n            });\r\n\r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            newService.id = data.id;\r\n            if (props.appendService) {\r\n                props.appendService(newService);\r\n            }\r\n\r\n            setFields({\r\n                ...fields,\r\n                title: \"\",\r\n                content: \"\"\r\n            });\r\n        } catch (err) {\r\n            console.error(`Failed to add new service. ${err}`);\r\n            setErrorMessage(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\r\n            {(errorMessage) &&\r\n                <FormRow className=\"justify-content-center\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\r\n                </FormRow>\r\n            }\r\n            <FormRow>\r\n                <FormGroup className=\"col-12 col-md\">\r\n                    <FormLabel for=\"servicesForm01\" className=\"md-font-sm text-muted\">\r\n                        Service Name\r\n                    </FormLabel>\r\n                    <input id=\"servicesForm01\" name=\"name\" type=\"text\" \r\n                        className=\"form-control\" value={fields.name} onChange={handleChange}\r\n                            placeholder=\"Try &quot;Health check-up&quot;\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup className=\"col-12 col-md\">\r\n                    <FormLabel for=\"servicesForm02\" className=\"md-font-sm text-muted\">\r\n                        Rate ($)\r\n                    </FormLabel>\r\n                    <input id=\"servicesForm02\" name=\"rate\" type=\"number\" \r\n                        className=\"form-control\" value={fields.rate} onChange={handleChange}\r\n                            placeholder=\"00.00\" min=\"0\" step=\"0.01\" \r\n                    />\r\n                </FormGroup>\r\n                <FormGroup className=\"col-sm-auto align-self-end\">\r\n                    <FormSubmit>Add</FormSubmit>\r\n                </FormGroup>\r\n            </FormRow>\r\n        </Form>\r\n    );\r\n}","import React from 'react';\r\nimport { Col, FluidContainer, Row } from '../../../../../../components/layout';\r\nimport { Currency, Username } from '../../../../../../components/users';\r\nimport { WidgetList, WidgetListItem, WidgetDropdown, \r\n    WidgetDropdownItem } from '../../../../../../components/widgets';\r\n\r\n\r\nfunction DefaultServiceItem(props) {\r\n    return (\r\n        <WidgetListItem>\r\n            <FluidContainer>\r\n                <Row>\r\n                    <Col className=\"md-font-sm text-center text-muted\">No service available</Col>\r\n                </Row>\r\n            </FluidContainer>\r\n        </WidgetListItem>\r\n    );\r\n}\r\n\r\n\r\nfunction ServiceItem(props) {\r\n    async function handleDelete(e) {\r\n        e.preventDefault();\r\n        \r\n        if (props.handleDelete) {\r\n            props.handleDelete(props.service.id);\r\n        }\r\n    }\r\n\r\n    const username = props.service.username;\r\n    const currentUsername = Username({ user: props.session });\r\n    const fromCurrentUser = (currentUsername === username) ? true : false;\r\n\r\n    return (\r\n        <WidgetListItem>\r\n            <FluidContainer>\r\n                <Row>\r\n                    <Col className=\"align-self-center\">\r\n                        <Row>\r\n                            <Col className=\"align-self-center\">\r\n                                {props.service.name}\r\n                            </Col>\r\n                            <Col className=\"col-auto\">\r\n                                <Currency value={props.service.rate} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className=\"col-auto\">\r\n                        {fromCurrentUser &&\r\n                            <WidgetDropdown>\r\n                                <WidgetDropdownItem handleClick={handleDelete}>Delete</WidgetDropdownItem>\r\n                            </WidgetDropdown>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </FluidContainer>\r\n        </WidgetListItem>\r\n    );\r\n}\r\n\r\n\r\nexport default function ListSection(props) {\r\n    return (\r\n        <WidgetList>\r\n            {(props.services.length !== 0) ?\r\n                <>\r\n                    {props.services.map((service, index) => (\r\n                        <ServiceItem \r\n                            key={index}\r\n                            session={props.session}\r\n                            service={service}\r\n                            handleDelete={props.deleteService}\r\n                        />\r\n                    ))}\r\n                </> :\r\n                <DefaultServiceItem />\r\n            }\r\n        </WidgetList>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { AutoLoader } from '../../../../../../components/loaders';\r\nimport { TitleBar, TitleToggler, Widget, \r\n    WidgetCollapsible } from '../../../../../../components/widgets';\r\n\r\nimport AddSection from './addSection';\r\nimport ListSection from './listSection';\r\n\r\n\r\nexport default function ServiceSection(props) {\r\n    const [state, setState] = useState({\r\n        services: [],\r\n        limit: 10\r\n    });\r\n\r\n    async function appendServices() {\r\n        try {\r\n            const url = `/api/users/${props.user.username}/services`;\r\n\r\n            const searchParams = new URLSearchParams();\r\n            searchParams.append('page', Math.ceil(state.services.length / state.limit));\r\n            searchParams.append('limit', state.limit);\r\n\r\n            const response = await fetch(`${url}?${searchParams.toString()}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n\r\n            let newServices = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(newServices.message);\r\n            }\r\n\r\n            setState(prevState => {\r\n                const updatedServices = [...prevState.services, ...newServices];\r\n\r\n                return {\r\n                    ...prevState,\r\n                    services: updatedServices\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.error(`Failed to append more services. ${err}`);\r\n        }\r\n    }\r\n\r\n    async function appendService(newService) {\r\n        setState(prevState => {\r\n            const newServices = [newService, ...prevState.services];\r\n\r\n            return {\r\n                ...prevState,\r\n                services: newServices\r\n            }\r\n        });\r\n    }\r\n\r\n    async function deleteService(id) {\r\n        try {\r\n            const response = await fetch(`/api/users/${props.user.username}/services/${id}`, {\r\n                method: 'DELETE',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n\r\n            let data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message);\r\n            }\r\n\r\n            setState(prevState => {\r\n                const newServices = state.services.filter(service => {\r\n                    return service.id !== id;\r\n                });\r\n\r\n                return {\r\n                    ...prevState,\r\n                    services: newServices\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.error(`Failed to delete service- ${id}. ${err}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Widget>\r\n                <TitleBar title=\"Services\">\r\n                    {(!props.disableEdit) &&\r\n                        <TitleToggler \r\n                            target=\"userServiceAdd01\"\r\n                            expandIcon=\"add\"\r\n                            collapseIcon=\"clear\"\r\n                        />\r\n                    }\r\n                </TitleBar>\r\n                <WidgetCollapsible id=\"userServiceAdd01\">\r\n                    <AddSection\r\n                        session={props.session}\r\n                        user={props.user}\r\n                        appendService={appendService}\r\n                    />\r\n                </WidgetCollapsible>\r\n                <ListSection\r\n                    session={props.session}\r\n                    services={state.services}\r\n                    deleteService={deleteService}\r\n                />\r\n            </Widget>\r\n            <AutoLoader callback={appendServices} />\r\n        </>\r\n    );\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}