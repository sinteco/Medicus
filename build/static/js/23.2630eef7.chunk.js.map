{"version":3,"sources":["containers/users/user/views/detailView/medications/listSection.js","containers/users/user/views/detailView/medications/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["DefaultMedicationItem","props","className","MedicationItem","to","medication","appointmentId","name","dosage","ListSection","medications","length","map","index","handleDelete","deleteMedication","MedicationSection","useState","limit","state","setState","a","url","user","username","searchParams","URLSearchParams","append","Math","ceil","fetch","toString","headers","session","authToken","response","json","newMedications","ok","Error","message","prevState","updatedMedications","console","error","title","callback","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"sPAMA,SAASA,EAAsBC,GAC3B,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,UAAU,oCAAf,2CAQpB,SAASC,EAAeF,GACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,UAAU,iCAAf,SACI,cAAC,IAAD,CAAME,GAAE,wBAAmBH,EAAMI,WAAWC,eAA5C,SACKL,EAAMI,WAAWE,WAI9B,cAAC,IAAD,UACI,cAAC,IAAD,CAAKL,UAAU,sCAAf,mBACQD,EAAMI,WAAWG,OADzB,gBAUL,SAASC,EAAYR,GAChC,OACI,cAAC,IAAD,UACmC,IAA7BA,EAAMS,YAAYC,OAChB,mCACKV,EAAMS,YAAYE,KAAI,SAACP,EAAYQ,GAAb,OACnB,cAACV,EAAD,CAEIE,WAAYA,EACZS,aAAcb,EAAMc,kBAFfF,QAMjB,cAACb,EAAD,MC/CD,SAASgB,EAAkBf,GACtC,MAA0BgB,mBAAS,CAC/BP,YAAa,GACbQ,MAAO,KAFX,mBAAOC,EAAP,KAAcC,EAAd,KAD6C,4CAM7C,kCAAAC,EAAA,sEAEcC,EAFd,qBAEkCrB,EAAMsB,KAAKC,SAF7C,iBAIcC,EAAe,IAAIC,iBACZC,OAAO,OAAQC,KAAKC,KAAKV,EAAMT,YAAYC,OAASQ,EAAMD,QACvEO,EAAaE,OAAO,QAASR,EAAMD,OAN3C,SAQ+BY,MAAM,GAAD,OAAIR,EAAJ,YAAWG,EAAaM,YAAc,CAC9DC,QAAS,CACL,cAAgB,UAAhB,OAA2B/B,EAAMgC,QAAQC,cAVzD,cAQcC,EARd,iBAcmCA,EAASC,OAd5C,WAcYC,EAdZ,OAeaF,EAASG,GAftB,uBAgBkB,IAAIC,MAAMF,EAAeG,SAhB3C,QAmBQpB,GAAS,SAAAqB,GACL,IAAMC,EAAkB,sBAAOD,EAAU/B,aAAjB,YAAiC2B,IAEzD,OAAO,2BACAI,GADP,IAEI/B,YAAagC,OAxB7B,kDA4BQC,QAAQC,MAAR,oDA5BR,2DAN6C,sBAsC7C,OACI,qCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAUC,MAAM,gBAChB,cAACpC,EAAD,CACIC,YAAaS,EAAMT,iBAG3B,cAAC,IAAD,CAAYoC,SA9CyB,kD,0FCHlC,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE","file":"static/js/23.2630eef7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, FluidContainer, Row } from '../../../../../../components/layout';\r\nimport { WidgetList, WidgetListItem } from '../../../../../../components/widgets';\r\n\r\n\r\nfunction DefaultMedicationItem(props) {\r\n    return (\r\n        <WidgetListItem>\r\n            <FluidContainer>\r\n                <Row>\r\n                    <Col className=\"md-font-sm text-center text-muted\">No medication available</Col>\r\n                </Row>\r\n            </FluidContainer>\r\n        </WidgetListItem>\r\n    );\r\n}\r\n\r\n\r\nfunction MedicationItem(props) {\r\n    return (\r\n        <WidgetListItem>\r\n            <FluidContainer>\r\n                <Row>\r\n                    <Col className=\"text-truncate font-weight-bold\">\r\n                        <Link to={`/appointments/${props.medication.appointmentId}`}>\r\n                            {props.medication.name}\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"md-font-sm text-muted text-truncate\">\r\n                        {`${props.medication.dosage} mg`}\r\n                    </Col>\r\n                </Row>\r\n            </FluidContainer>\r\n        </WidgetListItem>\r\n    );\r\n}\r\n\r\n\r\nexport default function ListSection(props) {\r\n    return (\r\n        <WidgetList>\r\n            {(props.medications.length !== 0) ?\r\n                <>\r\n                    {props.medications.map((medication, index) => (\r\n                        <MedicationItem \r\n                            key={index}\r\n                            medication={medication}\r\n                            handleDelete={props.deleteMedication}\r\n                        />\r\n                    ))}\r\n                </> :\r\n                <DefaultMedicationItem />\r\n            }\r\n        </WidgetList>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { AutoLoader } from '../../../../../../components/loaders';\r\nimport { TitleBar, Widget } from '../../../../../../components/widgets';\r\n\r\nimport ListSection from './listSection';\r\n\r\n\r\nexport default function MedicationSection(props) {\r\n    const [state, setState] = useState({\r\n        medications: [],\r\n        limit: 10\r\n    });\r\n\r\n    async function appendMedications() {\r\n        try {\r\n            const url = `/api/users/${props.user.username}/medications`;\r\n\r\n            const searchParams = new URLSearchParams();\r\n            searchParams.append('page', Math.ceil(state.medications.length / state.limit));\r\n            searchParams.append('limit', state.limit);\r\n\r\n            const response = await fetch(`${url}?${searchParams.toString()}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${props.session.authToken}`\r\n                }\r\n            });\r\n\r\n            let newMedications = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(newMedications.message);\r\n            }\r\n\r\n            setState(prevState => {\r\n                const updatedMedications = [...prevState.medications, ...newMedications];\r\n\r\n                return {\r\n                    ...prevState,\r\n                    medications: updatedMedications\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.error(`Failed to append more medications. ${err}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Widget>\r\n                <TitleBar title=\"Medications\"></TitleBar>\r\n                <ListSection\r\n                    medications={state.medications}\r\n                />\r\n            </Widget>\r\n            <AutoLoader callback={appendMedications} />\r\n        </>\r\n    );\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}